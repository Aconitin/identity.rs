var searchIndex = JSON.parse('{\
"identity_core":{"doc":"","i":[[14,"json","identity_core","Construct a `serde_json::Value` from a JSON literal.",null,null],[0,"common","","",null,null],[6,"Object","identity_core::common","",null,null],[6,"Value","","",null,null],[0,"context","","",null,null],[4,"Context","identity_core::common::context","A reference to a JSON-LD context",null,null],[13,"Url","","",0,null],[13,"Obj","","",0,null],[0,"one_or_many","identity_core::common","",null,null],[3,"OneOrManyIter","identity_core::common::one_or_many","",null,null],[12,"inner","","",1,null],[12,"index","","",1,null],[4,"OneOrMany","","A generic container that stores one or many values of a…",null,null],[13,"One","","",2,null],[13,"Many","","",2,null],[11,"len","","Returns the number of elements in the collection",2,[[]]],[11,"is_empty","","Returns `true` if the collection is empty",2,[[]]],[11,"get","","Returns a reference to the element at the given index.",2,[[],["option",4]]],[11,"get_mut","","Returns a mutable reference to the element at the given…",2,[[],["option",4]]],[11,"contains","","Returns `true` if the collection contains the given value.",2,[[]]],[11,"push","","Adds a new value to the collection.",2,[[]]],[11,"iter","","Returns an `Iterator` that yields items from the collection.",2,[[]]],[11,"as_slice","","Returns a reference to the contents as a slice.",2,[[]]],[11,"into_vec","","Consumes the `OneOrMany` and returns the contents as a…",2,[[],["vec",3]]],[11,"new","","",1,[[["oneormany",4]]]],[0,"timestamp","identity_core::common","",null,null],[3,"Timestamp","identity_core::common::timestamp","A parsed Timestamp.",null,null],[12,"0","","",3,null],[11,"parse","","Parses a `Timestamp` from the provided input string.",3,[[],["result",6]]],[11,"now","","Creates a new `Timestamp` with the current date and time.",3,[[]]],[11,"to_unix","","Returns the `Timestamp` as a Unix timestamp.",3,[[]]],[11,"to_rfc3339","","Returns the `Timestamp` as an RFC 3339 `String`.",3,[[],["string",3]]],[0,"url","identity_core::common","",null,null],[3,"Url","identity_core::common::url","A parsed URL.",null,null],[12,"0","","",4,null],[11,"parse","","Parses an absolute `Url` from the given input string.",4,[[],["result",6]]],[11,"into_string","","Consumes the `Url` and returns the value as a `String`.",4,[[],["string",3]]],[11,"join","","Parses the given input string as a `Url`, with `self` as…",4,[[],["result",6]]],[0,"convert","identity_core","",null,null],[0,"as_json","identity_core::convert","",null,null],[8,"ToJson","identity_core::convert::as_json","",null,null],[11,"to_json","","",5,[[],[["result",6],["string",3]]]],[11,"to_json_vec","","",5,[[],[["result",6],["vec",3]]]],[11,"to_json_value","","",5,[[],[["result",6],["value",4]]]],[11,"to_json_pretty","","",5,[[],[["result",6],["string",3]]]],[8,"FromJson","","",null,null],[11,"from_json","","",6,[[],["result",6]]],[11,"from_json_slice","","",6,[[],["result",6]]],[11,"from_json_value","","",6,[[["value",4]],["result",6]]],[8,"AsJson","","",null,null],[11,"from_json","","",7,[[],["result",6]]],[11,"from_json_slice","","",7,[[],["result",6]]],[11,"to_json","","",7,[[],[["result",6],["string",3]]]],[11,"to_json_vec","","",7,[[],[["result",6],["vec",3]]]],[11,"to_json_value","","",7,[[],[["result",6],["value",4]]]],[11,"to_json_pretty","","",7,[[],[["result",6],["string",3]]]],[0,"serde_into","identity_core::convert","",null,null],[8,"SerdeInto","identity_core::convert::serde_into","",null,null],[11,"serde_into","","",8,[[],["result",6]]],[8,"ToJson","identity_core::convert","",null,null],[11,"to_json","identity_core::convert::as_json","",5,[[],[["result",6],["string",3]]]],[11,"to_json_vec","","",5,[[],[["result",6],["vec",3]]]],[11,"to_json_value","","",5,[[],[["result",6],["value",4]]]],[11,"to_json_pretty","","",5,[[],[["result",6],["string",3]]]],[8,"FromJson","identity_core::convert","",null,null],[11,"from_json","identity_core::convert::as_json","",6,[[],["result",6]]],[11,"from_json_slice","","",6,[[],["result",6]]],[11,"from_json_value","","",6,[[["value",4]],["result",6]]],[8,"AsJson","identity_core::convert","",null,null],[11,"from_json","identity_core::convert::as_json","",7,[[],["result",6]]],[11,"from_json_slice","","",7,[[],["result",6]]],[11,"to_json","","",7,[[],[["result",6],["string",3]]]],[11,"to_json_vec","","",7,[[],[["result",6],["vec",3]]]],[11,"to_json_value","","",7,[[],[["result",6],["value",4]]]],[11,"to_json_pretty","","",7,[[],[["result",6],["string",3]]]],[8,"SerdeInto","identity_core::convert","",null,null],[11,"serde_into","identity_core::convert::serde_into","",8,[[],["result",6]]],[0,"crypto","identity_core","",null,null],[3,"PublicKey","identity_core::crypto","",null,null],[12,"0","","",9,null],[3,"SecretKey","","",null,null],[12,"0","","",10,null],[3,"KeyPair","","A convenience for storing a pair of public/secret keys",null,null],[12,"0","","",11,null],[12,"1","","",11,null],[0,"key_impl","","",null,null],[3,"PublicKey","identity_core::crypto::key_impl","",null,null],[12,"0","","",9,null],[3,"SecretKey","","",null,null],[12,"0","","",10,null],[11,"len","identity_core::crypto","",9,[[]]],[11,"is_empty","","",9,[[]]],[11,"to_hex","","",9,[[],["string",3]]],[11,"len","","",10,[[]]],[11,"is_empty","","",10,[[]]],[11,"to_hex","","",10,[[],["string",3]]],[0,"key_pair","","",null,null],[3,"KeyPair","identity_core::crypto::key_pair","A convenience for storing a pair of public/secret keys",null,null],[12,"0","","",11,null],[12,"1","","",11,null],[11,"new","identity_core::crypto","Creates a new `KeyPair` from the given keys.",11,[[["publickey",3],["secretkey",3]]]],[11,"public","","Returns a reference to the `PublicKey` object.",11,[[],["publickey",3]]],[11,"secret","","Returns a reference to the `SecretKey` object.",11,[[],["secretkey",3]]],[0,"error","identity_core","",null,null],[4,"Error","identity_core::error","The main crate Error type; uses `thiserror`.",null,null],[13,"EncodeJSON","","",12,null],[13,"DecodeJSON","","",12,null],[13,"DecodeBase16","","",12,null],[13,"DecodeBase58","","",12,null],[13,"DecodeBase64","","",12,null],[13,"InvalidDID","","",12,null],[13,"InvalidDocument","","",12,null],[13,"InvalidDiff","","",12,null],[13,"InvalidUrl","","",12,null],[13,"InvalidTimestamp","","",12,null],[13,"InvalidCredential","","",12,null],[13,"InvalidPresentation","","",12,null],[13,"ResolutionError","","",12,null],[13,"DereferenceError","","",12,null],[6,"Result","","The main crate result type derived from the…",null,null],[0,"proof","identity_core","",null,null],[3,"JcsEd25519Signature2020","identity_core::proof","",null,null],[0,"jcsed25519signature2020","","",null,null],[3,"JcsEd25519Signature2020","identity_core::proof::jcsed25519signature2020","",null,null],[5,"pubkey","","",null,[[],[["result",6],["verificationkey",3]]]],[5,"seckey","","",null,[[],[["signingkey",3],["result",6]]]],[5,"ed25519_sign","","",null,[[],[["vec",3],["result",6]]]],[5,"ed25519_verify","","",null,[[],[["vec",3],["result",6]]]],[17,"SIGNATURE_NAME","","",null,null],[17,"SIGNATURE_SIZE","","",null,null],[17,"PUBLIC_KEY_BYTES","","",null,null],[17,"SECRET_KEY_BYTES","","",null,null],[18,"NAME","identity_core::proof","",13,null],[11,"new_keypair","","",13,[[],["keypair",3]]],[11,"sign_data","","",13,[[],[["result",6],["signaturedata",4]]]],[11,"verify_data","","",13,[[["signaturedata",4]],["result",6]]],[11,"normalize","","",13,[[],[["result",6],["genericarray",3]]]],[0,"resolver","identity_core","",null,null],[3,"Dereference","identity_core::resolver","",null,null],[12,"metadata","","",14,null],[12,"content","","",14,null],[12,"content_metadata","","",14,null],[3,"DocumentMetadata","","",null,null],[12,"created","","The timestamp of the Create operation.",15,null],[12,"updated","","The timestamp of the last Update operation.",15,null],[12,"properties","","Additional document metadata properties.",15,null],[3,"InputMetadata","","",null,null],[12,"accept","","The MIME type of the preferred representation of the DID…",16,null],[12,"properties","","Additional input metadata properties.",16,null],[3,"Resolution","","",null,null],[12,"metadata","","",17,null],[12,"document","","",17,null],[12,"document_metadata","","",17,null],[3,"ResolutionMetadata","","",null,null],[12,"error","","The error code from the resolution process, if an error…",18,null],[12,"content_type","","The MIME type of the returned document stream.",18,null],[12,"duration","","The elapsed time of the resolution operation.",18,null],[12,"resolved","","The parsed DID that was used for resolution.",18,null],[12,"properties","","Additional resolution metadata properties.",18,null],[3,"MetaDocument","","",null,null],[12,"data","","",19,null],[12,"meta","","",19,null],[4,"ErrorKind","","",null,null],[13,"InvalidDID","","The DID supplied to the DID resolution function does not…",20,null],[13,"NotSupported","","The DID resolver does not support the specified method.",20,null],[13,"NotFound","","The DID resolver was unable to return the DID document…",20,null],[4,"Resource","","",null,null],[13,"Primary","","",21,null],[13,"Secondary","","",21,null],[4,"PrimaryResource","","",null,null],[13,"Document","","",22,null],[13,"Service","","",22,null],[4,"SecondaryResource","","",null,null],[13,"VerificationDID","","",23,null],[13,"VerificationKey","","",23,null],[13,"Service","","",23,null],[5,"resolve","","",null,[[["inputmetadata",3]]]],[5,"dereference","","",null,[[["inputmetadata",3]]]],[0,"dereference","","",null,null],[3,"Dereference","identity_core::resolver::dereference","",null,null],[12,"metadata","","",14,null],[12,"content","","",14,null],[12,"content_metadata","","",14,null],[11,"new","identity_core::resolver","",14,[[]]],[0,"document_metadata","","",null,null],[3,"DocumentMetadata","identity_core::resolver::document_metadata","",null,null],[12,"created","","The timestamp of the Create operation.",15,null],[12,"updated","","The timestamp of the last Update operation.",15,null],[12,"properties","","Additional document metadata properties.",15,null],[11,"new","identity_core::resolver","",15,[[]]],[0,"error_kind","","",null,null],[4,"ErrorKind","identity_core::resolver::error_kind","",null,null],[13,"InvalidDID","","The DID supplied to the DID resolution function does not…",20,null],[13,"NotSupported","","The DID resolver does not support the specified method.",20,null],[13,"NotFound","","The DID resolver was unable to return the DID document…",20,null],[0,"impls","identity_core::resolver","",null,null],[3,"ResolveContext","identity_core::resolver::impls","",null,null],[12,"0","","",24,null],[12,"1","","",24,null],[3,"DerefContext","","",null,null],[12,"0","","",25,null],[12,"1","","",25,null],[5,"resolve","","",null,[[["inputmetadata",3]]]],[5,"dereference","","",null,[[["inputmetadata",3]]]],[5,"dereference_primary","","",null,[[["document",3],["did",3]],[["option",4],["result",6]]]],[5,"dereference_document","","",null,[[["document",3]],[["option",4],["result",6]]]],[5,"service_endpoint_ctor","","",null,[[["did",3],["url",3]],[["result",6],["url",3]]]],[11,"new","","",24,[[]]],[11,"set_document","","",24,[[["document",3]]]],[11,"set_metadata","","",24,[[["documentmetadata",3]]]],[11,"set_resolved","","",24,[[["did",3]]]],[11,"set_error","","",24,[[["errorkind",4]]]],[11,"finish_error","","",24,[[["errorkind",4]],["resolution",3]]],[11,"finish","","",24,[[],["resolution",3]]],[11,"new","","",25,[[]]],[11,"set_content","","",25,[[]]],[11,"set_metadata","","",25,[[["documentmetadata",3]]]],[11,"set_error","","",25,[[["errorkind",4]]]],[11,"finish_error","","",25,[[["errorkind",4]],["dereference",3]]],[11,"finish","","",25,[[],["dereference",3]]],[0,"input_metadata","identity_core::resolver","",null,null],[3,"InputMetadata","identity_core::resolver::input_metadata","",null,null],[12,"accept","","The MIME type of the preferred representation of the DID…",16,null],[12,"properties","","Additional input metadata properties.",16,null],[17,"MIME_ANY","","",null,null],[17,"MIME_DID","","",null,null],[17,"MIME_DID_LD","","",null,null],[11,"new","identity_core::resolver","",16,[[]]],[0,"resolution","","",null,null],[3,"Resolution","identity_core::resolver::resolution","",null,null],[12,"metadata","","",17,null],[12,"document","","",17,null],[12,"document_metadata","","",17,null],[11,"new","identity_core::resolver","",17,[[]]],[0,"resolution_metadata","","",null,null],[3,"ResolutionMetadata","identity_core::resolver::resolution_metadata","",null,null],[12,"error","","The error code from the resolution process, if an error…",18,null],[12,"content_type","","The MIME type of the returned document stream.",18,null],[12,"duration","","The elapsed time of the resolution operation.",18,null],[12,"resolved","","The parsed DID that was used for resolution.",18,null],[12,"properties","","Additional resolution metadata properties.",18,null],[11,"new","identity_core::resolver","",18,[[]]],[0,"resource","","",null,null],[4,"Resource","identity_core::resolver::resource","",null,null],[13,"Primary","","",21,null],[13,"Secondary","","",21,null],[4,"PrimaryResource","","",null,null],[13,"Document","","",22,null],[13,"Service","","",22,null],[4,"SecondaryResource","","",null,null],[13,"VerificationDID","","",23,null],[13,"VerificationKey","","",23,null],[13,"Service","","",23,null],[0,"traits","identity_core::resolver","",null,null],[3,"MetaDocument","identity_core::resolver::traits","",null,null],[12,"data","","",19,null],[12,"meta","","",19,null],[8,"ResolverMethod","","",null,null],[10,"is_supported","","",26,[[["did",3]]]],[10,"read","","",26,[[["inputmetadata",3],["did",3]],[["pin",3],["box",3]]]],[17,"MIME_ANY","identity_core::resolver","",null,null],[17,"MIME_DID","","",null,null],[17,"MIME_DID_LD","","",null,null],[8,"ResolverMethod","","",null,null],[10,"is_supported","","",26,[[["did",3]]]],[10,"read","","",26,[[["inputmetadata",3],["did",3]],[["pin",3],["box",3]]]],[0,"utils","identity_core","",null,null],[5,"decode_b58","identity_core::utils","",null,[[],[["result",6],["vec",3]]]],[5,"encode_b58","","",null,[[],["string",3]]],[5,"decode_hex","","",null,[[],[["result",6],["vec",3]]]],[5,"encode_hex","","",null,[[],["string",3]]],[5,"decode_b64","","",null,[[],[["result",6],["vec",3]]]],[5,"encode_b64","","",null,[[],["string",3]]],[0,"vc","identity_core","",null,null],[3,"Credential","identity_core::vc","A `Credential` represents a set of claims describing an…",null,null],[12,"context","","The JSON-LD context(s) applicable to the `Credential`.",27,null],[12,"id","","A unique `URI` referencing the subject of the `Credential`.",27,null],[12,"types","","One or more URIs defining the type of the `Credential`.",27,null],[12,"credential_subject","","One or more `Object`s representing the `Credential`…",27,null],[12,"issuer","","A reference to the issuer of the `Credential`.",27,null],[12,"issuance_date","","A timestamp of when the `Credential` becomes valid.",27,null],[12,"expiration_date","","A timestamp of when the `Credential` should no longer be…",27,null],[12,"credential_status","","Information used to determine the current status of the…",27,null],[12,"credential_schema","","Information used to assist in the enforcement of a…",27,null],[12,"refresh_service","","Service(s) used to refresh an expired `Credential`.",27,null],[12,"terms_of_use","","Terms-of-use specified by the `Credential` issuer.",27,null],[12,"evidence","","Human-readable evidence used to support the claims within…",27,null],[12,"non_transferable","","Indicates that the `Credential` must only be contained…",27,null],[12,"properties","","Miscellaneous properties.",27,null],[3,"CredentialBuilder","","A `CredentialBuilder` is used to create a customized…",null,null],[12,"context","","",28,null],[12,"id","","",28,null],[12,"types","","",28,null],[12,"credential_subject","","",28,null],[12,"issuer","","",28,null],[12,"issuance_date","","",28,null],[12,"expiration_date","","",28,null],[12,"credential_status","","",28,null],[12,"credential_schema","","",28,null],[12,"refresh_service","","",28,null],[12,"terms_of_use","","",28,null],[12,"evidence","","",28,null],[12,"non_transferable","","",28,null],[12,"properties","","",28,null],[3,"Presentation","","A `Presentation` represents a bundle of one or more…",null,null],[12,"context","","The JSON-LD context(s) applicable to the `Presentation`.",29,null],[12,"id","","A unique `URI` referencing the subject of the…",29,null],[12,"types","","One or more URIs defining the type of the `Presentation`.",29,null],[12,"verifiable_credential","","Credential(s) expressing the claims of the `Presentation`.",29,null],[12,"holder","","The entity that generated the presentation.",29,null],[12,"refresh_service","","Service(s) used to refresh an expired `Presentation`.",29,null],[12,"terms_of_use","","Terms-of-use specified by the `Presentation` holder.",29,null],[12,"properties","","Miscellaneous properties.",29,null],[3,"PresentationBuilder","","A `PresentationBuilder` is used to create a customized…",null,null],[12,"context","","",30,null],[12,"id","","",30,null],[12,"types","","",30,null],[12,"verifiable_credential","","",30,null],[12,"holder","","",30,null],[12,"refresh_service","","",30,null],[12,"terms_of_use","","",30,null],[12,"properties","","",30,null],[3,"CredentialSchema","","Information used to validate the structure of a…",null,null],[12,"id","","",31,null],[12,"types","","",31,null],[12,"properties","","",31,null],[3,"CredentialStatus","","Information used to determine the current status of a…",null,null],[12,"id","","",32,null],[12,"types","","",32,null],[12,"properties","","",32,null],[3,"CredentialSubject","","An entity who is the target of a set of claims.",null,null],[12,"id","","",33,null],[12,"properties","","",33,null],[3,"Evidence","","Information used to increase confidence in the claims of a…",null,null],[12,"id","","",34,null],[12,"types","","",34,null],[12,"properties","","",34,null],[3,"IssuerData","","A `Credential` issuer in object form.",null,null],[12,"id","","",35,null],[12,"properties","","",35,null],[3,"RefreshService","","Information used to refresh or assert the status of a…",null,null],[12,"id","","",36,null],[12,"types","","",36,null],[12,"properties","","",36,null],[3,"TermsOfUse","","Information used to express obligations, prohibitions, and…",null,null],[12,"id","","",37,null],[12,"types","","",37,null],[12,"properties","","",37,null],[3,"VerifiableCredential","","A `VerifiableCredential` represents a `Credential` with an…",null,null],[12,"credential","","",38,null],[12,"proof","","",38,null],[3,"VerifiablePresentation","","A `VerifiablePresentation` represents a `Presentation`…",null,null],[12,"presentation","","",39,null],[12,"proof","","",39,null],[4,"Issuer","","An identifier representing the issuer of a `Credential`.",null,null],[13,"Url","","",40,null],[13,"Obj","","",40,null],[0,"credential","","",null,null],[3,"BASE_CONTEXT","identity_core::vc::credential","",null,null],[12,"__private_field","","",41,null],[3,"Credential","","A `Credential` represents a set of claims describing an…",null,null],[12,"context","","The JSON-LD context(s) applicable to the `Credential`.",27,null],[12,"id","","A unique `URI` referencing the subject of the `Credential`.",27,null],[12,"types","","One or more URIs defining the type of the `Credential`.",27,null],[12,"credential_subject","","One or more `Object`s representing the `Credential`…",27,null],[12,"issuer","","A reference to the issuer of the `Credential`.",27,null],[12,"issuance_date","","A timestamp of when the `Credential` becomes valid.",27,null],[12,"expiration_date","","A timestamp of when the `Credential` should no longer be…",27,null],[12,"credential_status","","Information used to determine the current status of the…",27,null],[12,"credential_schema","","Information used to assist in the enforcement of a…",27,null],[12,"refresh_service","","Service(s) used to refresh an expired `Credential`.",27,null],[12,"terms_of_use","","Terms-of-use specified by the `Credential` issuer.",27,null],[12,"evidence","","Human-readable evidence used to support the claims within…",27,null],[12,"non_transferable","","Indicates that the `Credential` must only be contained…",27,null],[12,"properties","","Miscellaneous properties.",27,null],[11,"base_context","identity_core::vc","Returns the base JSON-LD context for `Credential`s.",27,[[],["context",4]]],[11,"base_type","","Returns the base type for `Credential`s.",27,[[]]],[11,"builder","","Creates a `CredentialBuilder` to configure a new…",27,[[],["credentialbuilder",3]]],[11,"from_builder","","Returns a new `Credential` based on the…",27,[[["credentialbuilder",3]],["result",6]]],[11,"check_structure","","Validates the semantic structure of the `Credential`.",27,[[],["result",6]]],[11,"sign","","",27,[[["document",3],["secretkey",3]],[["result",6],["verifiablecredential",3]]]],[0,"credential_builder","","",null,null],[3,"CredentialBuilder","identity_core::vc::credential_builder","A `CredentialBuilder` is used to create a customized…",null,null],[12,"context","","",28,null],[12,"id","","",28,null],[12,"types","","",28,null],[12,"credential_subject","","",28,null],[12,"issuer","","",28,null],[12,"issuance_date","","",28,null],[12,"expiration_date","","",28,null],[12,"credential_status","","",28,null],[12,"credential_schema","","",28,null],[12,"refresh_service","","",28,null],[12,"terms_of_use","","",28,null],[12,"evidence","","",28,null],[12,"non_transferable","","",28,null],[12,"properties","","",28,null],[11,"new","identity_core::vc","Creates a new `CredentialBuilder`.",28,[[]]],[11,"context","","Adds a value to the `Credential` context set.",28,[[]]],[11,"id","","Sets the value of the `Credential` `id`.",28,[[["url",3]]]],[11,"type_","","Adds a value to the `Credential` type set.",28,[[]]],[11,"credential_subject","","Adds a value to the `credentialSubject` set.",28,[[["credentialsubject",3]]]],[11,"issuer","","Sets the value of the `Credential` `issuer`.",28,[[]]],[11,"issuance_date","","Sets the value of the `Credential` `issuanceDate`.",28,[[["timestamp",3]]]],[11,"expiration_date","","Sets the value of the `Credential` `expirationDate`.",28,[[["timestamp",3]]]],[11,"credential_status","","Adds a value to the `credentialStatus` set.",28,[[["credentialstatus",3]]]],[11,"credential_schema","","Adds a value to the `credentialSchema` set.",28,[[["credentialschema",3]]]],[11,"refresh_service","","Adds a value to the `refreshService` set.",28,[[["refreshservice",3]]]],[11,"terms_of_use","","Adds a value to the `termsOfUse` set.",28,[[["termsofuse",3]]]],[11,"evidence","","Adds a value to the `evidence` set.",28,[[["evidence",3]]]],[11,"non_transferable","","Sets the value of the `Credential` `nonTransferable`…",28,[[]]],[11,"build","","Returns a new `Credential` based on the…",28,[[],[["credential",3],["result",6]]]],[11,"property","","Adds a new custom property to the `Credential`.",28,[[]]],[11,"properties","","Adds a series of custom properties to the `Credential`.",28,[[]]],[0,"presentation","","",null,null],[3,"Presentation","identity_core::vc::presentation","A `Presentation` represents a bundle of one or more…",null,null],[12,"context","","The JSON-LD context(s) applicable to the `Presentation`.",29,null],[12,"id","","A unique `URI` referencing the subject of the…",29,null],[12,"types","","One or more URIs defining the type of the `Presentation`.",29,null],[12,"verifiable_credential","","Credential(s) expressing the claims of the `Presentation`.",29,null],[12,"holder","","The entity that generated the presentation.",29,null],[12,"refresh_service","","Service(s) used to refresh an expired `Presentation`.",29,null],[12,"terms_of_use","","Terms-of-use specified by the `Presentation` holder.",29,null],[12,"properties","","Miscellaneous properties.",29,null],[11,"base_context","identity_core::vc","Returns the base JSON-LD context for `Presentation`s.",29,[[],["context",4]]],[11,"base_type","","Returns the base type for `Presentation`s.",29,[[]]],[11,"builder","","Creates a `PresentationBuilder` to configure a new…",29,[[],["presentationbuilder",3]]],[11,"from_builder","","Returns a new `Presentation` based on the…",29,[[["presentationbuilder",3]],["result",6]]],[11,"check_structure","","Validates the semantic structure of the `Presentation`.",29,[[],["result",6]]],[0,"presentation_builder","","",null,null],[3,"PresentationBuilder","identity_core::vc::presentation_builder","A `PresentationBuilder` is used to create a customized…",null,null],[12,"context","","",30,null],[12,"id","","",30,null],[12,"types","","",30,null],[12,"verifiable_credential","","",30,null],[12,"holder","","",30,null],[12,"refresh_service","","",30,null],[12,"terms_of_use","","",30,null],[12,"properties","","",30,null],[11,"new","identity_core::vc","Creates a new `PresentationBuilder`.",30,[[]]],[11,"context","","Adds a value to the `Presentation` context set.",30,[[]]],[11,"id","","Sets the value of the `Presentation` `id`.",30,[[["url",3]]]],[11,"type_","","Adds a value to the `Presentation` type set.",30,[[]]],[11,"verifiable_credential","","Adds a value to the `verifiableCredential` set.",30,[[["verifiablecredential",3]]]],[11,"holder","","Sets the value of the `Credential` `holder`.",30,[[["url",3]]]],[11,"refresh_service","","Adds a value to the `refreshService` set.",30,[[["refreshservice",3]]]],[11,"terms_of_use","","Adds a value to the `termsOfUse` set.",30,[[["termsofuse",3]]]],[11,"build","","Returns a new `Presentation` based on the…",30,[[],[["presentation",3],["result",6]]]],[11,"property","","Adds a new custom property to the `Presentation`.",30,[[]]],[11,"properties","","Adds a series of custom properties to the `Presentation`.",30,[[]]],[0,"types","","",null,null],[0,"credential_schema","identity_core::vc::types","",null,null],[3,"CredentialSchema","identity_core::vc::types::credential_schema","Information used to validate the structure of a…",null,null],[12,"id","","",31,null],[12,"types","","",31,null],[12,"properties","","",31,null],[11,"new","identity_core::vc","",31,[[["url",3]]]],[11,"with_properties","","",31,[[["object",6],["url",3]]]],[0,"credential_status","identity_core::vc::types","",null,null],[3,"CredentialStatus","identity_core::vc::types::credential_status","Information used to determine the current status of a…",null,null],[12,"id","","",32,null],[12,"types","","",32,null],[12,"properties","","",32,null],[11,"new","identity_core::vc","",32,[[["url",3]]]],[11,"with_properties","","",32,[[["object",6],["url",3]]]],[0,"credential_subject","identity_core::vc::types","",null,null],[3,"CredentialSubject","identity_core::vc::types::credential_subject","An entity who is the target of a set of claims.",null,null],[12,"id","","",33,null],[12,"properties","","",33,null],[11,"new","identity_core::vc","",33,[[]]],[11,"with_id","","",33,[[["url",3]]]],[11,"with_properties","","",33,[[["object",6]]]],[11,"with_id_and_properties","","",33,[[["object",6],["url",3]]]],[0,"evidence","identity_core::vc::types","",null,null],[3,"Evidence","identity_core::vc::types::evidence","Information used to increase confidence in the claims of a…",null,null],[12,"id","","",34,null],[12,"types","","",34,null],[12,"properties","","",34,null],[11,"new","identity_core::vc","",34,[[]]],[11,"with_id","","",34,[[]]],[11,"with_properties","","",34,[[["object",6]]]],[11,"with_id_and_properties","","",34,[[["object",6]]]],[0,"issuer","identity_core::vc::types","",null,null],[3,"IssuerData","identity_core::vc::types::issuer","A `Credential` issuer in object form.",null,null],[12,"id","","",35,null],[12,"properties","","",35,null],[4,"Issuer","","An identifier representing the issuer of a `Credential`.",null,null],[13,"Url","","",40,null],[13,"Obj","","",40,null],[11,"url","identity_core::vc","",40,[[],["url",3]]],[0,"refresh_service","identity_core::vc::types","",null,null],[3,"RefreshService","identity_core::vc::types::refresh_service","Information used to refresh or assert the status of a…",null,null],[12,"id","","",36,null],[12,"types","","",36,null],[12,"properties","","",36,null],[11,"new","identity_core::vc","",36,[[["url",3]]]],[11,"with_properties","","",36,[[["object",6],["url",3]]]],[0,"terms_of_use","identity_core::vc::types","",null,null],[3,"TermsOfUse","identity_core::vc::types::terms_of_use","Information used to express obligations, prohibitions, and…",null,null],[12,"id","","",37,null],[12,"types","","",37,null],[12,"properties","","",37,null],[11,"new","identity_core::vc","",37,[[]]],[11,"with_id","","",37,[[["url",3]]]],[11,"with_properties","","",37,[[["object",6]]]],[11,"with_id_and_properties","","",37,[[["object",6],["url",3]]]],[0,"verifiable_credential","","",null,null],[3,"VerifiableCredential","identity_core::vc::verifiable_credential","A `VerifiableCredential` represents a `Credential` with an…",null,null],[12,"credential","","",38,null],[12,"proof","","",38,null],[11,"new","identity_core::vc","Creates a new `VerifiableCredential`.",38,[[["credential",3]]]],[11,"proof","","Returns a reference to the `VerifiableCredential` proof.",38,[[],["oneormany",4]]],[11,"proof_mut","","Returns a mutable reference to the `VerifiableCredential`…",38,[[],["oneormany",4]]],[0,"verifiable_presentation","","",null,null],[3,"VerifiablePresentation","identity_core::vc::verifiable_presentation","A `VerifiablePresentation` represents a `Presentation`…",null,null],[12,"presentation","","",39,null],[12,"proof","","",39,null],[11,"new","identity_core::vc","Creates a new `VerifiablePresentation`.",39,[[["presentation",3]]]],[11,"proof","","Returns a reference to the `VerifiablePresentation` proof.",39,[[],["oneormany",4]]],[11,"proof_mut","","Returns a mutable reference to the…",39,[[],["oneormany",4]]],[11,"from","identity_core::common::context","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","identity_core::common::one_or_many","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"equivalent","","",2,[[]]],[11,"encode_hex","","",2,[[]]],[11,"encode_hex_upper","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"from","identity_core::common::timestamp","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"equivalent","","",3,[[]]],[11,"vzip","","",3,[[]]],[11,"from","identity_core::common::url","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"equivalent","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"from","identity_core::crypto","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"encode_hex","","",9,[[]]],[11,"encode_hex_upper","","",9,[[]]],[11,"zeroize","","",9,[[]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"encode_hex","","",10,[[]]],[11,"encode_hex_upper","","",10,[[]]],[11,"zeroize","","",10,[[]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"zeroize","","",11,[[]]],[11,"vzip","","",11,[[]]],[11,"from","identity_core::error","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","identity_core::proof","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","identity_core::resolver","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"equivalent","","",20,[[]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","identity_core::resolver::impls","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","identity_core::vc","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","identity_core::vc::credential","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"drop","identity_core::crypto","",9,[[]]],[11,"drop","","",10,[[]]],[11,"drop","","",11,[[]]],[11,"as_ref","identity_core::common::one_or_many","",2,[[]]],[11,"as_ref","identity_core::crypto","",9,[[]]],[11,"as_ref","","",10,[[]]],[11,"from","identity_core::common::context","",0,[[["url",3]]]],[11,"from","","",0,[[["object",6]]]],[11,"from","identity_core::common::one_or_many","",2,[[]]],[11,"from","","",2,[[["vec",3]]]],[11,"from","identity_core::crypto","",9,[[["vec",3]],["publickey",3]]],[11,"from","","",10,[[["vec",3]],["secretkey",3]]],[11,"from","identity_core::error","",12,[[["fromhexerror",4]]]],[11,"from","","",12,[[["error",4]]]],[11,"from","","",12,[[["decodeerror",4]]]],[11,"from","","",12,[[["error",4]]]],[11,"from","","",12,[[["error",4]]]],[11,"from","","",12,[[["error",4]]]],[11,"from","","",12,[[["parseerror",4]]]],[11,"from","","",12,[[["parseerror",3]]]],[11,"from","identity_core::resolver","",21,[[["primaryresource",4]]]],[11,"from","","",21,[[["secondaryresource",4]]]],[11,"from","","",22,[[["document",3]]]],[11,"from","","",22,[[["url",3]]]],[11,"from","","",23,[[["did",3]]]],[11,"from","","",23,[[["method",3]]]],[11,"from","","",23,[[["methodref",4]]]],[11,"from","","",23,[[["method",3],["didkey",3]]]],[11,"from","","",23,[[["didkey",3],["methodref",4]]]],[11,"from","","",23,[[["didkey",3],["service",3]]]],[11,"from","identity_core::vc","",40,[[]]],[11,"next","identity_core::common::one_or_many","",1,[[],["option",4]]],[11,"clone","identity_core::common::context","",0,[[],["context",4]]],[11,"clone","identity_core::common::one_or_many","",2,[[],["oneormany",4]]],[11,"clone","identity_core::common::timestamp","",3,[[],["timestamp",3]]],[11,"clone","identity_core::common::url","",4,[[],["url",3]]],[11,"clone","identity_core::crypto","",9,[[],["publickey",3]]],[11,"clone","","",10,[[],["secretkey",3]]],[11,"clone","","",11,[[],["keypair",3]]],[11,"clone","identity_core::proof","",13,[[],["jcsed25519signature2020",3]]],[11,"clone","identity_core::resolver","",14,[[],["dereference",3]]],[11,"clone","","",15,[[],["documentmetadata",3]]],[11,"clone","","",20,[[],["errorkind",4]]],[11,"clone","","",16,[[],["inputmetadata",3]]],[11,"clone","","",17,[[],["resolution",3]]],[11,"clone","","",18,[[],["resolutionmetadata",3]]],[11,"clone","","",21,[[],["resource",4]]],[11,"clone","","",22,[[],["primaryresource",4]]],[11,"clone","","",23,[[],["secondaryresource",4]]],[11,"clone","","",19,[[],["metadocument",3]]],[11,"clone","identity_core::vc","",27,[[],["credential",3]]],[11,"clone","","",28,[[],["credentialbuilder",3]]],[11,"clone","","",29,[[],["presentation",3]]],[11,"clone","","",30,[[],["presentationbuilder",3]]],[11,"clone","","",31,[[],["credentialschema",3]]],[11,"clone","","",32,[[],["credentialstatus",3]]],[11,"clone","","",33,[[],["credentialsubject",3]]],[11,"clone","","",34,[[],["evidence",3]]],[11,"clone","","",35,[[],["issuerdata",3]]],[11,"clone","","",40,[[],["issuer",4]]],[11,"clone","","",36,[[],["refreshservice",3]]],[11,"clone","","",37,[[],["termsofuse",3]]],[11,"clone","","",38,[[],["verifiablecredential",3]]],[11,"clone","","",39,[[],["verifiablepresentation",3]]],[11,"default","identity_core::common::one_or_many","",2,[[]]],[11,"default","identity_core::common::timestamp","",3,[[]]],[11,"default","identity_core::resolver","",14,[[],["dereference",3]]],[11,"default","","",15,[[],["documentmetadata",3]]],[11,"default","","",16,[[],["inputmetadata",3]]],[11,"default","","",17,[[],["resolution",3]]],[11,"default","","",18,[[],["resolutionmetadata",3]]],[11,"default","identity_core::vc","",28,[[]]],[11,"default","","",30,[[]]],[11,"default","","",33,[[],["credentialsubject",3]]],[11,"default","","",34,[[],["evidence",3]]],[11,"default","","",37,[[],["termsofuse",3]]],[11,"cmp","identity_core::common::one_or_many","",2,[[["oneormany",4]],["ordering",4]]],[11,"cmp","identity_core::common::timestamp","",3,[[["timestamp",3]],["ordering",4]]],[11,"cmp","identity_core::common::url","",4,[[["url",3]],["ordering",4]]],[11,"cmp","identity_core::resolver","",20,[[["errorkind",4]],["ordering",4]]],[11,"eq","identity_core::common::context","",0,[[["context",4]]]],[11,"ne","","",0,[[["context",4]]]],[11,"eq","","",0,[[]]],[11,"eq","identity_core::common::one_or_many","",2,[[["oneormany",4]]]],[11,"ne","","",2,[[["oneormany",4]]]],[11,"eq","identity_core::common::timestamp","",3,[[["timestamp",3]]]],[11,"ne","","",3,[[["timestamp",3]]]],[11,"eq","identity_core::common::url","",4,[[["url",3]]]],[11,"ne","","",4,[[["url",3]]]],[11,"eq","","",4,[[]]],[11,"eq","identity_core::resolver","",14,[[["dereference",3]]]],[11,"ne","","",14,[[["dereference",3]]]],[11,"eq","","",15,[[["documentmetadata",3]]]],[11,"ne","","",15,[[["documentmetadata",3]]]],[11,"eq","","",20,[[["errorkind",4]]]],[11,"eq","","",16,[[["inputmetadata",3]]]],[11,"ne","","",16,[[["inputmetadata",3]]]],[11,"eq","","",17,[[["resolution",3]]]],[11,"ne","","",17,[[["resolution",3]]]],[11,"eq","","",18,[[["resolutionmetadata",3]]]],[11,"ne","","",18,[[["resolutionmetadata",3]]]],[11,"eq","","",21,[[["resource",4]]]],[11,"ne","","",21,[[["resource",4]]]],[11,"eq","","",22,[[["primaryresource",4]]]],[11,"ne","","",22,[[["primaryresource",4]]]],[11,"eq","","",23,[[["secondaryresource",4]]]],[11,"ne","","",23,[[["secondaryresource",4]]]],[11,"eq","","",19,[[["metadocument",3]]]],[11,"ne","","",19,[[["metadocument",3]]]],[11,"eq","identity_core::vc","",27,[[["credential",3]]]],[11,"ne","","",27,[[["credential",3]]]],[11,"eq","","",29,[[["presentation",3]]]],[11,"ne","","",29,[[["presentation",3]]]],[11,"eq","","",31,[[["credentialschema",3]]]],[11,"ne","","",31,[[["credentialschema",3]]]],[11,"eq","","",32,[[["credentialstatus",3]]]],[11,"ne","","",32,[[["credentialstatus",3]]]],[11,"eq","","",33,[[["credentialsubject",3]]]],[11,"ne","","",33,[[["credentialsubject",3]]]],[11,"eq","","",34,[[["evidence",3]]]],[11,"ne","","",34,[[["evidence",3]]]],[11,"eq","","",35,[[["issuerdata",3]]]],[11,"ne","","",35,[[["issuerdata",3]]]],[11,"eq","","",40,[[["issuer",4]]]],[11,"ne","","",40,[[["issuer",4]]]],[11,"eq","","",36,[[["refreshservice",3]]]],[11,"ne","","",36,[[["refreshservice",3]]]],[11,"eq","","",37,[[["termsofuse",3]]]],[11,"ne","","",37,[[["termsofuse",3]]]],[11,"eq","","",38,[[["verifiablecredential",3]]]],[11,"ne","","",38,[[["verifiablecredential",3]]]],[11,"eq","","",39,[[["verifiablepresentation",3]]]],[11,"ne","","",39,[[["verifiablepresentation",3]]]],[11,"partial_cmp","identity_core::common::one_or_many","",2,[[["oneormany",4]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["oneormany",4]]]],[11,"le","","",2,[[["oneormany",4]]]],[11,"gt","","",2,[[["oneormany",4]]]],[11,"ge","","",2,[[["oneormany",4]]]],[11,"partial_cmp","identity_core::common::timestamp","",3,[[["timestamp",3]],[["ordering",4],["option",4]]]],[11,"lt","","",3,[[["timestamp",3]]]],[11,"le","","",3,[[["timestamp",3]]]],[11,"gt","","",3,[[["timestamp",3]]]],[11,"ge","","",3,[[["timestamp",3]]]],[11,"partial_cmp","identity_core::common::url","",4,[[["url",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["url",3]]]],[11,"le","","",4,[[["url",3]]]],[11,"gt","","",4,[[["url",3]]]],[11,"ge","","",4,[[["url",3]]]],[11,"partial_cmp","identity_core::resolver","",20,[[["errorkind",4]],[["ordering",4],["option",4]]]],[11,"deref","identity_core::common::one_or_many","",2,[[]]],[11,"deref","identity_core::common::url","",4,[[]]],[11,"deref","identity_core::vc::credential","",41,[[],["context",4]]],[11,"deref","identity_core::vc","",38,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","identity_core::common::url","",4,[[]]],[11,"deref_mut","identity_core::vc","",38,[[]]],[11,"deref_mut","","",39,[[]]],[11,"fmt","identity_core::common::context","",0,[[["formatter",3]],["result",6]]],[11,"fmt","identity_core::common::one_or_many","",2,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_core::common::timestamp","",3,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_core::common::url","",4,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_core::crypto","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","identity_core::error","",12,[[["formatter",3]],["result",6]]],[11,"fmt","identity_core::proof","",13,[[["formatter",3]],["result",6]]],[11,"fmt","identity_core::resolver","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","identity_core::resolver::impls","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","identity_core::resolver","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","identity_core::vc","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","identity_core::common::one_or_many","",2,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_core::common::timestamp","",3,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_core::common::url","",4,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_core::crypto","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","identity_core::error","",12,[[["formatter",3]],["result",6]]],[11,"fmt","identity_core::vc","",27,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",29,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",38,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",39,[[["formatter",3]],["fmtresult",6]]],[11,"hash","identity_core::common::one_or_many","",2,[[]]],[11,"hash","identity_core::common::timestamp","",3,[[]]],[11,"hash","identity_core::common::url","",4,[[]]],[11,"hash","identity_core::resolver","",20,[[]]],[11,"try_from","identity_core::common::timestamp","",3,[[],["result",6]]],[11,"try_from","","",3,[[["string",3]],["result",6]]],[11,"from_str","","",3,[[],["result",6]]],[11,"from_str","identity_core::common::url","",4,[[],["result",6]]],[11,"source","identity_core::error","",12,[[],[["option",4],["error",8]]]],[11,"initialize","identity_core::vc::credential","",41,[[]]],[11,"serialize","identity_core::common::context","",0,[[],["result",4]]],[11,"serialize","identity_core::common::one_or_many","",2,[[],["result",4]]],[11,"serialize","identity_core::common::timestamp","",3,[[],["result",4]]],[11,"serialize","identity_core::common::url","",4,[[],["result",4]]],[11,"serialize","identity_core::resolver","",14,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","","",17,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",22,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","identity_core::vc","",27,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","","",32,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","","",35,[[],["result",4]]],[11,"serialize","","",40,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","","",37,[[],["result",4]]],[11,"serialize","","",38,[[],["result",4]]],[11,"serialize","","",39,[[],["result",4]]],[11,"deserialize","identity_core::common::context","",0,[[],["result",4]]],[11,"deserialize","identity_core::common::one_or_many","",2,[[],["result",4]]],[11,"deserialize","identity_core::common::timestamp","",3,[[],["result",4]]],[11,"deserialize","identity_core::common::url","",4,[[],["result",4]]],[11,"deserialize","identity_core::resolver","",14,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","","",20,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"deserialize","","",17,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","","",22,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","","",19,[[],["result",4]]],[11,"deserialize","identity_core::vc","",27,[[],["result",4]]],[11,"deserialize","","",29,[[],["result",4]]],[11,"deserialize","","",31,[[],["result",4]]],[11,"deserialize","","",32,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","","",34,[[],["result",4]]],[11,"deserialize","","",35,[[],["result",4]]],[11,"deserialize","","",40,[[],["result",4]]],[11,"deserialize","","",36,[[],["result",4]]],[11,"deserialize","","",37,[[],["result",4]]],[11,"deserialize","","",38,[[],["result",4]]],[11,"deserialize","","",39,[[],["result",4]]],[11,"sign","identity_core::proof","",13,[[],[["result",6],["signaturedata",4]]]],[11,"name","","",13,[[],["string",3]]],[11,"verify","","",13,[[["method",3],["signaturedata",4]],["result",6]]],[11,"set_signature","identity_core::vc","",38,[[["signature",3]]]],[11,"set_signature","","",39,[[["signature",3]]]],[11,"signature","","",38,[[],[["option",4],["signature",3]]]],[11,"signature","","",39,[[],[["option",4],["signature",3]]]],[11,"signature_mut","","",38,[[],[["option",4],["signature",3]]]],[11,"signature_mut","","",39,[[],[["option",4],["signature",3]]]],[11,"zeroize","identity_core::crypto","",9,[[]]],[11,"zeroize","","",10,[[]]],[11,"zeroize","","",11,[[]]]],"p":[[4,"Context"],[3,"OneOrManyIter"],[4,"OneOrMany"],[3,"Timestamp"],[3,"Url"],[8,"ToJson"],[8,"FromJson"],[8,"AsJson"],[8,"SerdeInto"],[3,"PublicKey"],[3,"SecretKey"],[3,"KeyPair"],[4,"Error"],[3,"JcsEd25519Signature2020"],[3,"Dereference"],[3,"DocumentMetadata"],[3,"InputMetadata"],[3,"Resolution"],[3,"ResolutionMetadata"],[3,"MetaDocument"],[4,"ErrorKind"],[4,"Resource"],[4,"PrimaryResource"],[4,"SecondaryResource"],[3,"ResolveContext"],[3,"DerefContext"],[8,"ResolverMethod"],[3,"Credential"],[3,"CredentialBuilder"],[3,"Presentation"],[3,"PresentationBuilder"],[3,"CredentialSchema"],[3,"CredentialStatus"],[3,"CredentialSubject"],[3,"Evidence"],[3,"IssuerData"],[3,"RefreshService"],[3,"TermsOfUse"],[3,"VerifiableCredential"],[3,"VerifiablePresentation"],[4,"Issuer"],[3,"BASE_CONTEXT"]]},\
"identity_derive":{"doc":"","i":[[5,"internal","identity_derive","Function for dealing with the internal logic of the macro.",null,[[["deriveinput",3]],["tokenstream",3]]],[0,"impls","","",null,null],[0,"enums","identity_derive::impls","",null,null],[5,"derive_diff_enum","identity_derive::impls::enums","derive a Diff type Enum from an incoming `InputModel`.",null,[[["inputmodel",4]],["tokenstream",3]]],[5,"impl_debug_enum","","",null,[[["inputmodel",4]],["tokenstream",3]]],[5,"impl_diff_enum","","derive the `Diff` trait for incoming Enum in `InputModel`.",null,[[["inputmodel",4]],["tokenstream",3]]],[5,"parse_evariants","","function that parses and sorts the variants into twp Vec…",null,[[["ident",3]]]],[5,"parse_merge","","",null,[[["ident",3],["svariant",4]]]],[5,"parse_diff","","parses data for the derived diff function.",null,[[["ident",3],["svariant",4]]]],[5,"parse_from_into","","",null,[[["ident",3],["evariant",3],["svariant",4]]]],[5,"populate_field_names","","",null,[[["svariant",4]]]],[0,"structs","identity_derive::impls","",null,null],[5,"derive_diff_struct","identity_derive::impls::structs","Derive the difference struct code from the `InputModel`",null,[[["inputmodel",4]],["tokenstream",3]]],[5,"debug_impl","","Implement the Debug trait on a derived struct.",null,[[["inputmodel",4]],["tokenstream",3]]],[5,"impl_from_into","","",null,[[["inputmodel",4]],["tokenstream",3]]],[5,"diff_impl","","implement Diff for the struct.",null,[[["inputmodel",4]],["tokenstream",3]]],[0,"model","identity_derive","",null,null],[3,"InputEnum","identity_derive::model","Sorts attributes regarding incoming Enums.",null,null],[12,"name","","",0,null],[12,"diff","","",0,null],[12,"variants","","",0,null],[12,"param_decls","","",0,null],[12,"params","","",0,null],[12,"clause","","",0,null],[12,"from_into","","",0,null],[3,"InputStruct","","Sorts data regarding incoming Structs.",null,null],[12,"variant","","",1,null],[12,"name","","",1,null],[12,"diff","","",1,null],[12,"fields","","",1,null],[12,"param_decls","","",1,null],[12,"params","","",1,null],[12,"clause","","",1,null],[12,"from_into","","",1,null],[3,"EVariant","","Enum variant data.",null,null],[12,"variant","","",2,null],[12,"name","","",2,null],[12,"fields","","",2,null],[4,"InputModel","","A model for dealing with the different input from the…",null,null],[13,"Enum","","",3,null],[13,"Struct","","",3,null],[4,"SVariant","","Struct Variant structure types.",null,null],[13,"Named","","",4,null],[13,"Tuple","","",4,null],[13,"Unit","","",4,null],[4,"DataFields","","sorts data for fields inside of a struct or enum.",null,null],[13,"Named","","",5,null],[12,"name","identity_derive::model::DataFields","",6,null],[12,"typ","","",6,null],[12,"should_ignore","","",6,null],[13,"Unnamed","identity_derive::model","",5,null],[12,"position","identity_derive::model::DataFields","",7,null],[12,"typ","","",7,null],[12,"should_ignore","","",7,null],[11,"parse","identity_derive::model","",3,[[["deriveinput",3]]]],[11,"parse_struct","","parse structs.",3,[[["fields",4],["deriveinput",3]]]],[11,"parse_unit","","parse unit structs.",3,[[["deriveinput",3]]]],[11,"parse_enum","","parse enums.",3,[[["punctuated",3],["deriveinput",3]]]],[11,"s_variant","","get struct variant.",3,[[],["svariant",4]]],[11,"e_variants","","get enum variant.",3,[[],["vec",3]]],[11,"name","","get name of struct or enum.",3,[[],["ident",3]]],[11,"diff","","get diff name for enum or struct.",3,[[],["ident",3]]],[11,"params","","get the params for the Enum or Struct.",3,[[],["punctuated",3]]],[11,"param_decls","","get the param declarations for the Enum or Struct.",3,[[],["punctuated",3]]],[11,"fields","","get the fields for the Enum or Struct.",3,[[],["vec",3]]],[11,"clause","","Get the where clause.",3,[[],["whereclause",3]]],[11,"impl_debug","","Implement the `Debug` trait on Enums and Structs.",3,[[],["tokenstream",3]]],[11,"impl_from_into","","",3,[[],["tokenstream",3]]],[11,"impl_diff","","Implement the `Diff` trait on Enums and Structs.",3,[[],["tokenstream",3]]],[11,"derive_diff","","Build the Diff Type for the Enum or Struct.",3,[[],["tokenstream",3]]],[11,"from_into","","",3,[[]]],[11,"new","","create a new `InputEnum`.",0,[[["deriveinput",3]]]],[11,"parse","","parse the enum.",0,[[["punctuated",3],["deriveinput",3]]]],[11,"new","","create a new `InputStruct`.",1,[[["deriveinput",3]]]],[11,"parse","","parse the ast into for the `InputStruct`.",1,[[["fields",4],["deriveinput",3]]]],[11,"parse_unit","","parse data for a unit struct.",1,[[["deriveinput",3]]]],[11,"new","","create a new enum variant type.",2,[[["ident",3]]]],[11,"name","","get the field name.",5,[[],["ident",3]]],[11,"position","","get the field position.",5,[[],["literal",3]]],[11,"typ","","get the field type.",5,[[],["type",4]]],[11,"typ_as_tokens","","get the type of the field wrapped in an `Option<T>` where…",5,[[],["tokenstream",3]]],[11,"is_option","","check if the field is an Option to avoid nested Options.",5,[[]]],[11,"should_ignore","","check to see if the should ignore flag is set for the field.",5,[[]]],[0,"utils","identity_derive","",null,null],[5,"extract_option_segment","identity_derive::utils","checks to see if a field\'s type is `Option`. This logic is…",null,[[["path",3]],[["pathsegment",3],["option",4]]]],[5,"should_ignore","","checks to see if the `should_ignore` attribute has been…",null,[[["field",3]]]],[5,"parse_from_into","","",null,[[["deriveinput",3]]]],[17,"PARENS","","",null,null],[24,"Diff","identity_derive","Entry point for the `Diff` derive proc macro. `Diff`…",null,null],[11,"from","identity_derive::model","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"clone","","",3,[[],["inputmodel",4]]],[11,"clone","","",0,[[],["inputenum",3]]],[11,"clone","","",1,[[],["inputstruct",3]]],[11,"clone","","",2,[[],["evariant",3]]],[11,"clone","","",4,[[],["svariant",4]]],[11,"clone","","",5,[[],["datafields",4]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]]],"p":[[3,"InputEnum"],[3,"InputStruct"],[3,"EVariant"],[4,"InputModel"],[4,"SVariant"],[4,"DataFields"],[13,"Named"],[13,"Unnamed"]]},\
"identity_diff":{"doc":"","i":[[4,"Error","identity_diff","",null,null],[13,"DiffError","","",0,null],[13,"MergeError","","",0,null],[13,"ConversionError","","",0,null],[0,"did_doc","","This module implements a `Diff` trait type. The Diff trait…",null,null],[3,"DiffDocument","identity_diff::did_doc","",null,null],[12,"id","","",1,null],[12,"controller","","",1,null],[12,"also_known_as","","",1,null],[12,"verification_method","","",1,null],[12,"authentication","","",1,null],[12,"assertion_method","","",1,null],[12,"key_agreement","","",1,null],[12,"capability_delegation","","",1,null],[12,"capability_invocation","","",1,null],[12,"service","","",1,null],[12,"properties","","",1,null],[3,"DiffMethod","","",null,null],[12,"id","","",2,null],[12,"controller","","",2,null],[12,"key_type","","",2,null],[12,"key_data","","",2,null],[12,"properties","","",2,null],[3,"DiffService","","",null,null],[12,"id","","",3,null],[12,"type_","","",3,null],[12,"service_endpoint","","",3,null],[12,"properties","","",3,null],[4,"DiffMethodRef","","",null,null],[13,"Embed","","",4,null],[13,"Refer","","",4,null],[4,"DiffMethodData","","",null,null],[13,"PublicKeyBase58","","",5,null],[13,"PublicKeyHex","","",5,null],[13,"PublicKeyJwk","","",5,null],[6,"DiffObject","","",null,null],[6,"MapProxy","","",null,null],[0,"error","identity_diff","",null,null],[4,"Error","identity_diff::error","",null,null],[13,"DiffError","","",0,null],[13,"MergeError","","",0,null],[13,"ConversionError","","",0,null],[6,"Result","","",null,null],[11,"diff","identity_diff","",0,[[]]],[11,"merge","","",0,[[]]],[11,"convert","","",0,[[]]],[0,"hashmap","","",null,null],[3,"DiffHashMap","identity_diff::hashmap","A `DiffHashMap` type which represents a Diffed `HashMap`.…",null,null],[12,"0","","",6,null],[4,"InnerValue","","Inner value of the `DiffHashMap` type.",null,null],[13,"Change","","",7,null],[12,"key","identity_diff::hashmap::InnerValue","",8,null],[12,"value","","",8,null],[13,"Add","identity_diff::hashmap","",7,null],[12,"key","identity_diff::hashmap::InnerValue","",9,null],[12,"value","","",9,null],[13,"Remove","identity_diff::hashmap","",7,null],[12,"key","identity_diff::hashmap::InnerValue","",10,null],[0,"hashset","identity_diff","",null,null],[3,"DiffHashSet","identity_diff::hashset","",null,null],[12,"0","","",11,null],[4,"InnerValue","","",null,null],[13,"Add","","",12,null],[13,"Remove","","",12,null],[12,"remove","identity_diff::hashset::InnerValue","",13,null],[0,"macros","identity_diff","",null,null],[3,"Diffi8","identity_diff::macros","",null,null],[3,"Diffi16","","",null,null],[3,"Diffi32","","",null,null],[3,"Diffi64","","",null,null],[3,"Diffi128","","",null,null],[3,"DiffiSize","","",null,null],[3,"Diffu8","","",null,null],[3,"Diffu16","","",null,null],[3,"Diffu32","","",null,null],[3,"Diffu64","","",null,null],[3,"Diffu128","","",null,null],[3,"DiffuSize","","",null,null],[3,"DiffF32","","",null,null],[3,"DiffF64","","",null,null],[3,"Diffbool","","",null,null],[3,"Diffchar","","",null,null],[3,"Diffunit","","",null,null],[0,"option","identity_diff","",null,null],[4,"DiffOption","identity_diff::option","A `DiffOption<T>` type which represents a Diffed…",null,null],[13,"Some","","",14,null],[13,"None","","",14,null],[0,"string","identity_diff","",null,null],[3,"DiffString","identity_diff::string","The Diff Type for a `String` type.",null,null],[12,"0","","",15,null],[0,"traits","identity_diff","",null,null],[8,"Diff","identity_diff::traits","The primary `Diff` Trait type.",null,null],[16,"Type","","The Corresponding Diff Type for the implemented Type.",16,null],[10,"diff","","Finds the difference between two types; `self` and `other`…",16,[[],["result",6]]],[10,"merge","","Merges a `Self::Type` with `Self`",16,[[],["result",6]]],[10,"from_diff","","Converts a `diff` of type `Self::Type` to a `Self`.",16,[[],["result",6]]],[10,"into_diff","","Converts a type of `Self` to a `diff` of `Self::Type`.",16,[[],["result",6]]],[0,"value","identity_diff","",null,null],[3,"DiffValue","identity_diff::value","The Diff Type for `serde_json::Value`.",null,null],[12,"0","","",17,null],[0,"vec","identity_diff","",null,null],[3,"DiffVec","identity_diff::vec","The Diff Type for `Vec`.",null,null],[12,"0","","",18,null],[4,"InnerVec","","The Inner value for the `DiffVec` type. Is `untagged` by…",null,null],[13,"Change","","logs a change in a `Vec` type.",19,null],[12,"index","identity_diff::vec::InnerVec","",20,null],[12,"item","","",20,null],[13,"Remove","identity_diff::vec","Logs a remove event in a `Vec` type.",19,null],[12,"count","identity_diff::vec::InnerVec","",21,null],[13,"Add","identity_diff::vec","logs an Add event in a `Vec` type.",19,null],[6,"Result","identity_diff","",null,null],[8,"Diff","","The primary `Diff` Trait type.",null,null],[16,"Type","","The Corresponding Diff Type for the implemented Type.",16,null],[10,"diff","","Finds the difference between two types; `self` and `other`…",16,[[],["result",6]]],[10,"merge","","Merges a `Self::Type` with `Self`",16,[[],["result",6]]],[10,"from_diff","","Converts a `diff` of type `Self::Type` to a `Self`.",16,[[],["result",6]]],[10,"into_diff","","Converts a type of `Self` to a `diff` of `Self::Type`.",16,[[],["result",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","identity_diff::did_doc","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","identity_diff::hashmap","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","identity_diff::hashset","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","identity_diff::macros","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"equivalent","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"equivalent","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"equivalent","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"equivalent","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"equivalent","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"equivalent","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"equivalent","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"equivalent","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"equivalent","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"equivalent","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"equivalent","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"equivalent","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"equivalent","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"equivalent","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"equivalent","","",38,[[]]],[11,"from","identity_diff::option","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","identity_diff::string","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"equivalent","","",15,[[]]],[11,"from","identity_diff::value","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"equivalent","","",17,[[]]],[11,"from","identity_diff::vec","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","identity_diff::option","",14,[[["option",4]]]],[11,"into","","",14,[[],["option",4]]],[11,"clone","identity_diff::did_doc","",1,[[],["diffdocument",3]]],[11,"clone","","",2,[[],["diffmethod",3]]],[11,"clone","","",4,[[],["diffmethodref",4]]],[11,"clone","","",5,[[],["diffmethoddata",4]]],[11,"clone","","",3,[[],["diffservice",3]]],[11,"clone","identity_diff::hashmap","",7,[[],["innervalue",4]]],[11,"clone","","",6,[[],["diffhashmap",3]]],[11,"clone","identity_diff::hashset","",11,[[],["diffhashset",3]]],[11,"clone","","",12,[[],["innervalue",4]]],[11,"clone","identity_diff::macros","",22,[[],["diffi8",3]]],[11,"clone","","",23,[[],["diffi16",3]]],[11,"clone","","",24,[[],["diffi32",3]]],[11,"clone","","",25,[[],["diffi64",3]]],[11,"clone","","",26,[[],["diffi128",3]]],[11,"clone","","",27,[[],["diffisize",3]]],[11,"clone","","",28,[[],["diffu8",3]]],[11,"clone","","",29,[[],["diffu16",3]]],[11,"clone","","",30,[[],["diffu32",3]]],[11,"clone","","",31,[[],["diffu64",3]]],[11,"clone","","",32,[[],["diffu128",3]]],[11,"clone","","",33,[[],["diffusize",3]]],[11,"clone","","",34,[[],["difff32",3]]],[11,"clone","","",35,[[],["difff64",3]]],[11,"clone","","",36,[[],["diffbool",3]]],[11,"clone","","",37,[[],["diffchar",3]]],[11,"clone","","",38,[[],["diffunit",3]]],[11,"clone","identity_diff::option","",14,[[],["diffoption",4]]],[11,"clone","identity_diff::string","",15,[[],["diffstring",3]]],[11,"clone","identity_diff::value","",17,[[],["diffvalue",3]]],[11,"clone","identity_diff::vec","",18,[[],["diffvec",3]]],[11,"clone","","",19,[[],["innervec",4]]],[11,"default","identity_diff::hashmap","",6,[[]]],[11,"default","identity_diff::macros","",22,[[],["diffi8",3]]],[11,"default","","",23,[[],["diffi16",3]]],[11,"default","","",24,[[],["diffi32",3]]],[11,"default","","",25,[[],["diffi64",3]]],[11,"default","","",26,[[],["diffi128",3]]],[11,"default","","",27,[[],["diffisize",3]]],[11,"default","","",28,[[],["diffu8",3]]],[11,"default","","",29,[[],["diffu16",3]]],[11,"default","","",30,[[],["diffu32",3]]],[11,"default","","",31,[[],["diffu64",3]]],[11,"default","","",32,[[],["diffu128",3]]],[11,"default","","",33,[[],["diffusize",3]]],[11,"default","","",34,[[],["difff32",3]]],[11,"default","","",35,[[],["difff64",3]]],[11,"default","","",36,[[],["diffbool",3]]],[11,"default","","",37,[[],["diffchar",3]]],[11,"default","","",38,[[],["diffunit",3]]],[11,"default","identity_diff::option","",14,[[]]],[11,"default","identity_diff::string","",15,[[],["diffstring",3]]],[11,"default","identity_diff::value","",17,[[]]],[11,"default","identity_diff::vec","",18,[[]]],[11,"cmp","identity_diff::macros","",22,[[["diffi8",3]],["ordering",4]]],[11,"cmp","","",23,[[["diffi16",3]],["ordering",4]]],[11,"cmp","","",24,[[["diffi32",3]],["ordering",4]]],[11,"cmp","","",25,[[["diffi64",3]],["ordering",4]]],[11,"cmp","","",26,[[["diffi128",3]],["ordering",4]]],[11,"cmp","","",27,[[["diffisize",3]],["ordering",4]]],[11,"cmp","","",28,[[["diffu8",3]],["ordering",4]]],[11,"cmp","","",29,[[["diffu16",3]],["ordering",4]]],[11,"cmp","","",30,[[["diffu32",3]],["ordering",4]]],[11,"cmp","","",31,[[["diffu64",3]],["ordering",4]]],[11,"cmp","","",32,[[["diffu128",3]],["ordering",4]]],[11,"cmp","","",33,[[["diffusize",3]],["ordering",4]]],[11,"cmp","","",36,[[["diffbool",3]],["ordering",4]]],[11,"cmp","","",37,[[["diffchar",3]],["ordering",4]]],[11,"cmp","","",38,[[["diffunit",3]],["ordering",4]]],[11,"cmp","identity_diff::string","",15,[[["diffstring",3]],["ordering",4]]],[11,"eq","identity_diff::did_doc","",1,[[["diffdocument",3]]]],[11,"ne","","",1,[[["diffdocument",3]]]],[11,"eq","","",2,[[["diffmethod",3]]]],[11,"ne","","",2,[[["diffmethod",3]]]],[11,"eq","","",4,[[["diffmethodref",4]]]],[11,"ne","","",4,[[["diffmethodref",4]]]],[11,"eq","","",5,[[["diffmethoddata",4]]]],[11,"ne","","",5,[[["diffmethoddata",4]]]],[11,"eq","","",3,[[["diffservice",3]]]],[11,"ne","","",3,[[["diffservice",3]]]],[11,"eq","identity_diff::hashmap","",7,[[["innervalue",4]]]],[11,"ne","","",7,[[["innervalue",4]]]],[11,"eq","","",6,[[["diffhashmap",3]]]],[11,"ne","","",6,[[["diffhashmap",3]]]],[11,"eq","identity_diff::hashset","",11,[[["diffhashset",3]]]],[11,"ne","","",11,[[["diffhashset",3]]]],[11,"eq","","",12,[[["innervalue",4]]]],[11,"ne","","",12,[[["innervalue",4]]]],[11,"eq","identity_diff::macros","",22,[[["diffi8",3]]]],[11,"ne","","",22,[[["diffi8",3]]]],[11,"eq","","",23,[[["diffi16",3]]]],[11,"ne","","",23,[[["diffi16",3]]]],[11,"eq","","",24,[[["diffi32",3]]]],[11,"ne","","",24,[[["diffi32",3]]]],[11,"eq","","",25,[[["diffi64",3]]]],[11,"ne","","",25,[[["diffi64",3]]]],[11,"eq","","",26,[[["diffi128",3]]]],[11,"ne","","",26,[[["diffi128",3]]]],[11,"eq","","",27,[[["diffisize",3]]]],[11,"ne","","",27,[[["diffisize",3]]]],[11,"eq","","",28,[[["diffu8",3]]]],[11,"ne","","",28,[[["diffu8",3]]]],[11,"eq","","",29,[[["diffu16",3]]]],[11,"ne","","",29,[[["diffu16",3]]]],[11,"eq","","",30,[[["diffu32",3]]]],[11,"ne","","",30,[[["diffu32",3]]]],[11,"eq","","",31,[[["diffu64",3]]]],[11,"ne","","",31,[[["diffu64",3]]]],[11,"eq","","",32,[[["diffu128",3]]]],[11,"ne","","",32,[[["diffu128",3]]]],[11,"eq","","",33,[[["diffusize",3]]]],[11,"ne","","",33,[[["diffusize",3]]]],[11,"eq","","",34,[[["difff32",3]]]],[11,"ne","","",34,[[["difff32",3]]]],[11,"eq","","",35,[[["difff64",3]]]],[11,"ne","","",35,[[["difff64",3]]]],[11,"eq","","",36,[[["diffbool",3]]]],[11,"ne","","",36,[[["diffbool",3]]]],[11,"eq","","",37,[[["diffchar",3]]]],[11,"ne","","",37,[[["diffchar",3]]]],[11,"eq","","",38,[[["diffunit",3]]]],[11,"ne","","",38,[[["diffunit",3]]]],[11,"eq","identity_diff::option","",14,[[["diffoption",4]]]],[11,"ne","","",14,[[["diffoption",4]]]],[11,"eq","identity_diff::string","",15,[[["diffstring",3]]]],[11,"ne","","",15,[[["diffstring",3]]]],[11,"eq","identity_diff::value","",17,[[["diffvalue",3]]]],[11,"ne","","",17,[[["diffvalue",3]]]],[11,"eq","identity_diff::vec","",18,[[["diffvec",3]]]],[11,"ne","","",18,[[["diffvec",3]]]],[11,"eq","","",19,[[["innervec",4]]]],[11,"ne","","",19,[[["innervec",4]]]],[11,"partial_cmp","identity_diff::macros","",22,[[["diffi8",3]],[["ordering",4],["option",4]]]],[11,"lt","","",22,[[["diffi8",3]]]],[11,"le","","",22,[[["diffi8",3]]]],[11,"gt","","",22,[[["diffi8",3]]]],[11,"ge","","",22,[[["diffi8",3]]]],[11,"partial_cmp","","",23,[[["diffi16",3]],[["ordering",4],["option",4]]]],[11,"lt","","",23,[[["diffi16",3]]]],[11,"le","","",23,[[["diffi16",3]]]],[11,"gt","","",23,[[["diffi16",3]]]],[11,"ge","","",23,[[["diffi16",3]]]],[11,"partial_cmp","","",24,[[["diffi32",3]],[["ordering",4],["option",4]]]],[11,"lt","","",24,[[["diffi32",3]]]],[11,"le","","",24,[[["diffi32",3]]]],[11,"gt","","",24,[[["diffi32",3]]]],[11,"ge","","",24,[[["diffi32",3]]]],[11,"partial_cmp","","",25,[[["diffi64",3]],[["ordering",4],["option",4]]]],[11,"lt","","",25,[[["diffi64",3]]]],[11,"le","","",25,[[["diffi64",3]]]],[11,"gt","","",25,[[["diffi64",3]]]],[11,"ge","","",25,[[["diffi64",3]]]],[11,"partial_cmp","","",26,[[["diffi128",3]],[["ordering",4],["option",4]]]],[11,"lt","","",26,[[["diffi128",3]]]],[11,"le","","",26,[[["diffi128",3]]]],[11,"gt","","",26,[[["diffi128",3]]]],[11,"ge","","",26,[[["diffi128",3]]]],[11,"partial_cmp","","",27,[[["diffisize",3]],[["ordering",4],["option",4]]]],[11,"lt","","",27,[[["diffisize",3]]]],[11,"le","","",27,[[["diffisize",3]]]],[11,"gt","","",27,[[["diffisize",3]]]],[11,"ge","","",27,[[["diffisize",3]]]],[11,"partial_cmp","","",28,[[["diffu8",3]],[["ordering",4],["option",4]]]],[11,"lt","","",28,[[["diffu8",3]]]],[11,"le","","",28,[[["diffu8",3]]]],[11,"gt","","",28,[[["diffu8",3]]]],[11,"ge","","",28,[[["diffu8",3]]]],[11,"partial_cmp","","",29,[[["diffu16",3]],[["ordering",4],["option",4]]]],[11,"lt","","",29,[[["diffu16",3]]]],[11,"le","","",29,[[["diffu16",3]]]],[11,"gt","","",29,[[["diffu16",3]]]],[11,"ge","","",29,[[["diffu16",3]]]],[11,"partial_cmp","","",30,[[["diffu32",3]],[["ordering",4],["option",4]]]],[11,"lt","","",30,[[["diffu32",3]]]],[11,"le","","",30,[[["diffu32",3]]]],[11,"gt","","",30,[[["diffu32",3]]]],[11,"ge","","",30,[[["diffu32",3]]]],[11,"partial_cmp","","",31,[[["diffu64",3]],[["ordering",4],["option",4]]]],[11,"lt","","",31,[[["diffu64",3]]]],[11,"le","","",31,[[["diffu64",3]]]],[11,"gt","","",31,[[["diffu64",3]]]],[11,"ge","","",31,[[["diffu64",3]]]],[11,"partial_cmp","","",32,[[["diffu128",3]],[["ordering",4],["option",4]]]],[11,"lt","","",32,[[["diffu128",3]]]],[11,"le","","",32,[[["diffu128",3]]]],[11,"gt","","",32,[[["diffu128",3]]]],[11,"ge","","",32,[[["diffu128",3]]]],[11,"partial_cmp","","",33,[[["diffusize",3]],[["ordering",4],["option",4]]]],[11,"lt","","",33,[[["diffusize",3]]]],[11,"le","","",33,[[["diffusize",3]]]],[11,"gt","","",33,[[["diffusize",3]]]],[11,"ge","","",33,[[["diffusize",3]]]],[11,"partial_cmp","","",34,[[["difff32",3]],[["ordering",4],["option",4]]]],[11,"lt","","",34,[[["difff32",3]]]],[11,"le","","",34,[[["difff32",3]]]],[11,"gt","","",34,[[["difff32",3]]]],[11,"ge","","",34,[[["difff32",3]]]],[11,"partial_cmp","","",35,[[["difff64",3]],[["ordering",4],["option",4]]]],[11,"lt","","",35,[[["difff64",3]]]],[11,"le","","",35,[[["difff64",3]]]],[11,"gt","","",35,[[["difff64",3]]]],[11,"ge","","",35,[[["difff64",3]]]],[11,"partial_cmp","","",36,[[["diffbool",3]],[["ordering",4],["option",4]]]],[11,"lt","","",36,[[["diffbool",3]]]],[11,"le","","",36,[[["diffbool",3]]]],[11,"gt","","",36,[[["diffbool",3]]]],[11,"ge","","",36,[[["diffbool",3]]]],[11,"partial_cmp","","",37,[[["diffchar",3]],[["ordering",4],["option",4]]]],[11,"lt","","",37,[[["diffchar",3]]]],[11,"le","","",37,[[["diffchar",3]]]],[11,"gt","","",37,[[["diffchar",3]]]],[11,"ge","","",37,[[["diffchar",3]]]],[11,"partial_cmp","","",38,[[["diffunit",3]],[["ordering",4],["option",4]]]],[11,"lt","","",38,[[["diffunit",3]]]],[11,"le","","",38,[[["diffunit",3]]]],[11,"gt","","",38,[[["diffunit",3]]]],[11,"ge","","",38,[[["diffunit",3]]]],[11,"partial_cmp","identity_diff::string","",15,[[["diffstring",3]],[["ordering",4],["option",4]]]],[11,"lt","","",15,[[["diffstring",3]]]],[11,"le","","",15,[[["diffstring",3]]]],[11,"gt","","",15,[[["diffstring",3]]]],[11,"ge","","",15,[[["diffstring",3]]]],[11,"fmt","identity_diff::did_doc","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","identity_diff","",0,[[["formatter",3]],["result",6]]],[11,"fmt","identity_diff::hashmap","",6,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",7,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_diff::hashset","",11,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",12,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_diff::macros","",22,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",23,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",24,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",25,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",26,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",27,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",28,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",29,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",30,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",31,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",32,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",33,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",34,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",35,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",36,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",37,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",38,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_diff::option","",14,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_diff::string","",15,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_diff::value","",17,[[["formatter",3]],["result",6]]],[11,"fmt","identity_diff::vec","",18,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",19,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_diff","",0,[[["formatter",3]],["result",6]]],[11,"hash","identity_diff::macros","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","identity_diff::string","",15,[[]]],[11,"serialize","identity_diff::did_doc","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","identity_diff::hashmap","",7,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","identity_diff::hashset","",11,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","identity_diff::macros","",22,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","","",24,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","","",27,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","","",32,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","","",35,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","","",37,[[],["result",4]]],[11,"serialize","","",38,[[],["result",4]]],[11,"serialize","identity_diff::option","",14,[[],["result",4]]],[11,"serialize","identity_diff::string","",15,[[],["result",4]]],[11,"serialize","identity_diff::value","",17,[[],["result",4]]],[11,"serialize","identity_diff::vec","",18,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"deserialize","identity_diff::did_doc","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","identity_diff::hashmap","",7,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","identity_diff::hashset","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","identity_diff::macros","",22,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","","",24,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"deserialize","","",26,[[],["result",4]]],[11,"deserialize","","",27,[[],["result",4]]],[11,"deserialize","","",28,[[],["result",4]]],[11,"deserialize","","",29,[[],["result",4]]],[11,"deserialize","","",30,[[],["result",4]]],[11,"deserialize","","",31,[[],["result",4]]],[11,"deserialize","","",32,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","","",34,[[],["result",4]]],[11,"deserialize","","",35,[[],["result",4]]],[11,"deserialize","","",36,[[],["result",4]]],[11,"deserialize","","",37,[[],["result",4]]],[11,"deserialize","","",38,[[],["result",4]]],[11,"deserialize","identity_diff::option","",14,[[],["result",4]]],[11,"deserialize","identity_diff::string","",15,[[],["result",4]]],[11,"deserialize","identity_diff::value","",17,[[],["result",4]]],[11,"deserialize","identity_diff::vec","",18,[[],["result",4]]],[11,"deserialize","","",19,[[],["result",4]]]],"p":[[4,"Error"],[3,"DiffDocument"],[3,"DiffMethod"],[3,"DiffService"],[4,"DiffMethodRef"],[4,"DiffMethodData"],[3,"DiffHashMap"],[4,"InnerValue"],[13,"Change"],[13,"Add"],[13,"Remove"],[3,"DiffHashSet"],[4,"InnerValue"],[13,"Remove"],[4,"DiffOption"],[3,"DiffString"],[8,"Diff"],[3,"DiffValue"],[3,"DiffVec"],[4,"InnerVec"],[13,"Change"],[13,"Remove"],[3,"Diffi8"],[3,"Diffi16"],[3,"Diffi32"],[3,"Diffi64"],[3,"Diffi128"],[3,"DiffiSize"],[3,"Diffu8"],[3,"Diffu16"],[3,"Diffu32"],[3,"Diffu64"],[3,"Diffu128"],[3,"DiffuSize"],[3,"DiffF32"],[3,"DiffF64"],[3,"Diffbool"],[3,"Diffchar"],[3,"Diffunit"]]},\
"identity_iota":{"doc":"","i":[[0,"chain","identity_iota","",null,null],[3,"AuthChain","identity_iota::chain","",null,null],[12,"current","","",0,null],[12,"history","","",0,null],[3,"DiffChain","","",null,null],[12,"inner","","",1,null],[3,"DocumentChain","","",null,null],[12,"auth_chain","","",2,null],[12,"diff_chain","","",2,null],[12,"document","","",2,null],[0,"auth","","",null,null],[3,"AuthChain","identity_iota::chain::auth","",null,null],[12,"current","","",0,null],[12,"history","","",0,null],[11,"try_from_messages","identity_iota::chain","Constructs a new `AuthChain` from a slice of `Message`s.",0,[[["iotadid",3]],["result",6]]],[11,"new","","Creates a new `AuthChain` with the given `IotaDocument` as…",0,[[["iotadocument",3]],["result",6]]],[11,"current","","Returns a reference to the latest document in the auth…",0,[[],["iotadocument",3]]],[11,"current_mut","","Returns a mutable reference to the latest document in the…",0,[[],["iotadocument",3]]],[11,"current_message_id","","Returns the Tangle message Id of the latest auth document.",0,[[],["messageid",3]]],[11,"try_push","","Adds a new document to the auth chain.",0,[[["iotadocument",3]],["result",6]]],[11,"is_valid","","Returns `true` if the `IotaDocument` can be added to the…",0,[[["iotadocument",3]]]],[11,"check_validity","","Checks if the `IotaDocument` can be added to the auth chain.",0,[[["iotadocument",3]],["result",6]]],[0,"diff","","",null,null],[3,"DiffChain","identity_iota::chain::diff","",null,null],[12,"inner","","",1,null],[11,"try_from_messages","identity_iota::chain","Constructs a new `DiffChain` for the given `AuthChain`…",1,[[["authchain",3]],["result",6]]],[11,"new","","Creates a new `DiffChain`.",1,[[]]],[11,"len","","Returns the total number of diffs in the chain.",1,[[]]],[11,"is_empty","","Returns `true` if the diff chain is empty.",1,[[]]],[11,"clear","","Empties the diff chain, removing all diffs.",1,[[]]],[11,"iter","","Returns an iterator yielding references to `DocumentDiff`s.",1,[[],[["iter",3],["documentdiff",3]]]],[11,"current_message_id","","Returns the `MessageId` of the latest diff if the chain,…",1,[[],[["option",4],["messageid",3]]]],[11,"try_push","","Adds a new diff to the diff chain.",1,[[["authchain",3],["documentdiff",3]],["result",6]]],[11,"push_unchecked","","Adds a new diff to the diff chain with performing…",1,[[["documentdiff",3]]]],[11,"is_valid","","Returns `true` if the `DocumentDiff` can be added to the…",1,[[["authchain",3],["documentdiff",3]]]],[11,"check_validity","","Checks if the `DocumentDiff` can be added to the diff chain.",1,[[["authchain",3],["documentdiff",3]],["result",6]]],[0,"document","","",null,null],[3,"DocumentChain","identity_iota::chain::document","",null,null],[12,"auth_chain","","",2,null],[12,"diff_chain","","",2,null],[12,"document","","",2,null],[11,"__diff_message_id","identity_iota::chain","",2,[[["authchain",3],["diffchain",3]],["messageid",3]]],[11,"__fold","","",2,[[["authchain",3],["diffchain",3]],[["result",6],["iotadocument",3]]]],[11,"new","","Creates a new `DocumentChain` from given the `AuthChain`.",2,[[["authchain",3]]]],[11,"with_diff_chain","","Creates a new `DocumentChain` from given the `AuthChain`…",2,[[["authchain",3],["diffchain",3]],["result",6]]],[11,"id","","Returns a reference to the DID identifying the document…",2,[[],["iotadid",3]]],[11,"auth","","Returns a reference to the `AuthChain`.",2,[[],["authchain",3]]],[11,"auth_mut","","Returns a mutable reference to the `AuthChain`.",2,[[],["authchain",3]]],[11,"diff","","Returns a reference to the `DiffChain`.",2,[[],["diffchain",3]]],[11,"diff_mut","","Returns a mutable reference to the `DiffChain`.",2,[[],["diffchain",3]]],[11,"fold","","",2,[[],[["result",6],["iotadocument",3]]]],[11,"current","","Returns a reference to the latest document in the chain.",2,[[],["iotadocument",3]]],[11,"current_mut","","Returns a mutable reference to the latest document in the…",2,[[],["iotadocument",3]]],[11,"auth_message_id","","Returns the Tangle message Id of the latest auth document.",2,[[],["messageid",3]]],[11,"diff_message_id","","Returns the Tangle message Id of the latest diff or auth…",2,[[],["messageid",3]]],[11,"try_push_auth","","Adds a new auth document to the chain.",2,[[["iotadocument",3]],["result",6]]],[11,"try_push_diff","","Adds a new diff to the current diff chain.",2,[[["documentdiff",3]],["result",6]]],[0,"client","identity_iota","",null,null],[3,"Client","identity_iota::client","",null,null],[12,"client","","",3,null],[12,"network","","",3,null],[3,"ClientBuilder","","A `ClientBuilder` is used to generated a customized…",null,null],[12,"network","","",4,null],[12,"nodes","","",4,null],[3,"TxnPrinter","","",null,null],[12,"0","","",5,null],[12,"1","","",5,null],[4,"Network","","",null,null],[13,"Mainnet","","",6,null],[13,"Devnet","","",6,null],[13,"Comnet","","",6,null],[4,"__Full","","",null,null],[4,"__Mini","","",null,null],[4,"__Hash","","",null,null],[0,"client","","",null,null],[3,"Client","identity_iota::client::client","",null,null],[12,"client","","",3,null],[12,"network","","",3,null],[5,"create_transfer","","",null,[[],[["transfer",3],["result",6]]]],[5,"__dbg_transactions","","",null,[[["findtransactionsresponse",3]],[["vec",3],["string",3]]]],[5,"__dbg_trytes","","",null,[[["gettrytesresponse",3]],[["txnprinter",3],["vec",3]]]],[11,"new","identity_iota::client","Creates a new `Client`  with default settings.",3,[[],["result",6]]],[11,"builder","","Creates a `ClientBuilder` to configure a new `Client`.",3,[[],["clientbuilder",3]]],[11,"from_network","","Creates a new `Client` with default settings for the given…",3,[[["network",4]],["result",6]]],[11,"from_builder","","Creates a new `Client` based on the `ClientBuilder`…",3,[[["clientbuilder",3]],["result",6]]],[11,"network","","Returns the `Client` Tangle network.",3,[[],["network",4]]],[11,"default_node_url","","Returns the default node URL of the `Client` network.",3,[[],["url",3]]],[11,"explorer_url","","Returns the web explorer URL of the `Client` network.",3,[[],["url",3]]],[11,"transaction_url","","Returns the web explorer URL of the given `transaction`.",3,[[["bundledtransaction",3]],["url",3]]],[11,"transaction_hash","","Returns the hash of the Tangle transaction as a…",3,[[["bundledtransaction",3]],["string",3]]],[11,"publish_document","","Publishes an `IotaDocument` to the Tangle.",3,[[["iotadocument",3]]]],[11,"publish_diff","","Publishes a `DocumentDiff` to the Tangle.",3,[[["messageid",3],["documentdiff",3]]]],[11,"read_document","","",3,[[["iotadid",3]]]],[11,"read_document_chain","","",3,[[["iotadid",3]]]],[11,"read_messages","","",3,[[]]],[11,"send_transfer","","",3,[[["transfer",3]]]],[11,"check_network","","",3,[[["iotadid",3]],["result",6]]],[0,"client_builder","","",null,null],[3,"ClientBuilder","identity_iota::client::client_builder","A `ClientBuilder` is used to generated a customized…",null,null],[12,"network","","",4,null],[12,"nodes","","",4,null],[11,"new","identity_iota::client","Creates a new `ClientBuilder`.",4,[[]]],[11,"network","","Sets the network of the generated `Client`.",4,[[["network",4]]]],[11,"node","","Adds an IOTA node to the generated `Client`.",4,[[]]],[11,"nodes","","Adds an iterator of IOTA nodes to the generated `Client`.",4,[[]]],[11,"build","","Creates a new `Client` based on the `ClientBuilder`…",4,[[],[["result",6],["client",3]]]],[0,"network","","",null,null],[3,"EXPLORER_MAIN","identity_iota::client::network","",null,null],[12,"__private_field","","",7,null],[3,"EXPLORER_DEV","","",null,null],[12,"__private_field","","",8,null],[3,"EXPLORER_COM","","",null,null],[12,"__private_field","","",9,null],[3,"NODE_MAIN","","",null,null],[12,"__private_field","","",10,null],[3,"NODE_DEV","","",null,null],[12,"__private_field","","",11,null],[3,"NODE_COM","","",null,null],[12,"__private_field","","",12,null],[4,"Network","","",null,null],[13,"Mainnet","","",6,null],[13,"Devnet","","",6,null],[13,"Comnet","","",6,null],[11,"from_name","identity_iota::client","",6,[[]]],[11,"matches_did","","",6,[[["iotadid",3]]]],[11,"node_url","","Returns the default node URL of the Tangle network.",6,[[],["url",3]]],[11,"explorer_url","","Returns the web explorer URL of the Tangle network.",6,[[],["url",3]]],[11,"as_str","","Returns the name of the network as a static `str`.",6,[[]]],[0,"resolver","","",null,null],[5,"err","identity_iota::client::resolver","",null,[[["error",4]],["error",4]]],[0,"txn_printer","identity_iota::client","",null,null],[3,"TxnPrinter","identity_iota::client::txn_printer","",null,null],[12,"0","","",5,null],[12,"1","","",5,null],[4,"__Full","","",null,null],[4,"__Mini","","",null,null],[4,"__Hash","","",null,null],[11,"full","identity_iota::client","",5,[[["bundledtransaction",3]]]],[11,"mini","","",5,[[["bundledtransaction",3]]]],[11,"hash","","",5,[[["bundledtransaction",3]]]],[0,"did","identity_iota","",null,null],[3,"IotaDID","identity_iota::did","",null,null],[12,"0","","",13,null],[3,"Segments","","",null,null],[12,"0","","",14,null],[3,"IotaDocument","","",null,null],[12,"document","","",15,null],[12,"message_id","","",15,null],[3,"IotaDocumentBuilder","","",null,null],[12,"authentication_tag","","",16,null],[12,"authentication_type","","",16,null],[12,"did_network","","",16,null],[12,"did_shard","","",16,null],[12,"immutable","","",16,null],[3,"DocumentDiff","","",null,null],[12,"did","","",17,null],[12,"diff","","",17,null],[12,"previous_message_id","","",17,null],[12,"proof","","",17,null],[12,"message_id","","",17,null],[3,"Properties","","",null,null],[12,"created","","",18,null],[12,"updated","","",18,null],[12,"immutable","","",18,null],[12,"previous_message_id","","",18,null],[12,"properties","","",18,null],[0,"did","","",null,null],[3,"IotaDID","identity_iota::did::did","",null,null],[12,"0","","",13,null],[17,"BLAKE2B_256_LEN","","",null,null],[18,"METHOD","identity_iota::did","The DID method name.",13,null],[18,"DEFAULT_NETWORK","","The default Tangle network.",13,null],[11,"generate_ed25519","","Generates an `IotaDID` and `KeyPair` suitable for…",13,[[],["result",6]]],[11,"try_from_borrowed","","Converts a borrowed `DID` to an `IotaDID.`",13,[[["did",3]],["result",6]]],[11,"try_from_owned","","Converts an owned `DID` to an `IotaDID.`",13,[[["did",3]],["result",6]]],[11,"new_unchecked_ref","","Converts a `DID` reference to an `IotaDID` reference…",13,[[["did",3]]]],[11,"parse","","Parses an `IotaDID` from the given `input`.",13,[[],["result",6]]],[11,"new","","Creates a new `IotaDID` with a tag derived from the given…",13,[[],["result",6]]],[11,"with_network","","Creates a new `IotaDID` for the given `public` key and…",13,[[],["result",6]]],[11,"with_network_and_shard","","Creates a new `IotaDID` for the given `public` key,…",13,[[],["result",6]]],[11,"join","","Creates a new [`IotaDID`] by joining `self` with the…",13,[[],["result",6]]],[11,"check_method","","Checks if the given `DID` has a valid `IotaDID` `method`.",13,[[["did",3]],["result",6]]],[11,"check_method_id","","Checks if the given `DID` has a valid `IotaDID` `method_id`.",13,[[["did",3]],["result",6]]],[11,"check_validity","","Checks if the given `DID` is a valid `IotaDID`.",13,[[["did",3]],["result",6]]],[11,"is_valid","","Returns a `bool` indicating if the given `DID` is a valid…",13,[[["did",3]]]],[11,"network","","Returns the Tangle `network` of the `IotaDID`.",13,[[]]],[11,"shard","","Returns the Tangle network `shard` of the `IotaDID`.",13,[[],["option",4]]],[11,"tag","","Returns the unique Tangle tag of the `IotaDID`.",13,[[]]],[11,"segments","","",13,[[],["segments",3]]],[11,"address","","Returns the Tangle address of the DID auth chain.",13,[[],["string",3]]],[11,"normalize","","",13,[[["did",3]],["did",3]]],[11,"encode_key","","",13,[[],["string",3]]],[0,"did_segments","","",null,null],[3,"Segments","identity_iota::did::did_segments","",null,null],[12,"0","","",14,null],[11,"is_default_network","identity_iota::did","",14,[[]]],[11,"network","","",14,[[]]],[11,"shard","","",14,[[],["option",4]]],[11,"tag","","",14,[[]]],[11,"count","","",14,[[]]],[0,"document","","",null,null],[3,"IotaDocument","identity_iota::did::document","",null,null],[12,"document","","",15,null],[12,"message_id","","",15,null],[6,"__Document","","",null,null],[17,"AUTH_QUERY","","",null,null],[17,"ERR_AMNS","","",null,null],[17,"ERR_AMMF","","",null,null],[17,"ERR_AMIM","","",null,null],[11,"generate_ed25519","identity_iota::did","",15,[[],["result",6]]],[11,"try_from_document","","Converts a generic DID `Document` to an `IotaDocument`.",15,[[["document",3]],["result",6]]],[11,"builder","","Creates a `IotaDocumentBuilder` to configure a new…",15,[[],["iotadocumentbuilder",3]]],[11,"id","","Returns the DID document `id`.",15,[[],["iotadid",3]]],[11,"authentication","","Returns the default authentication method of the DID…",15,[[],["methodwrap",3]]],[11,"authentication_bytes","","Returns the key bytes of the default DID document…",15,[[],[["result",6],["vec",3]]]],[11,"authentication_type","","Returns the method type of the default DID document…",15,[[],["methodtype",4]]],[11,"created","","Returns the timestamp of when the DID document was created.",15,[[],["timestamp",3]]],[11,"set_created","","Sets the timestamp of when the DID document was created.",15,[[["timestamp",3]]]],[11,"set_created_now","","Sets the DID document \\\"created\\\" timestamp to…",15,[[]]],[11,"updated","","Returns the timestamp of the last DID document update.",15,[[],["timestamp",3]]],[11,"set_updated","","Sets the timestamp of the last DID document update.",15,[[["timestamp",3]]]],[11,"set_updated_now","","Sets the DID document \\\"updated\\\" timestamp to…",15,[[]]],[11,"previous_message_id","","Returns the Tangle message id of the previous DID…",15,[[],["messageid",3]]],[11,"set_previous_message_id","","Sets the Tangle message id the previous DID document.",15,[[]]],[11,"immutable","","Returns true if the `IotaDocument` is flagged as immutable.",15,[[]]],[11,"set_immutable","","Sets the value of the `immutable` flag.",15,[[]]],[11,"properties","","Returns a reference to the custom `IotaDocument` properties.",15,[[],["object",6]]],[11,"properties_mut","","Returns a mutable reference to the custom `IotaDocument`…",15,[[],["object",6]]],[11,"as_document","","Returns a reference to the `VerifiableDocument`.",15,[[],["verifiabledocument",3]]],[11,"as_document_mut","","Returns a mutable reference to the `VerifiableDocument`.",15,[[],["verifiabledocument",3]]],[11,"sign","","Signs the DID document with the default authentication…",15,[[["secretkey",3]],["result",6]]],[11,"verify","","Verifies the signature of the DID document.",15,[[],["result",6]]],[11,"sign_data","","Signs the provided data with the default authentication…",15,[[["secretkey",3]],["result",6]]],[11,"verify_data","","Verfies the signature of the provided data.",15,[[],["result",6]]],[11,"resolve_options","","",15,[[],[["signatureoptions",3],["result",6]]]],[11,"diff","","Creates a `DocumentDiff` representing the changes between…",15,[[["secretkey",3],["messageid",3]],[["result",6],["documentdiff",3]]]],[11,"merge","","Verifies a `DocumentDiff` signature and merges the changes…",15,[[["documentdiff",3]],["result",6]]],[11,"publish","","Publishes the `IotaDocument` to the Tangle using a default…",15,[[]]],[11,"publish_with_client","","Publishes the `IotaDocument` to the Tangle using the…",15,[[["client",3]]]],[11,"diff_address","","Returns the Tangle address of the DID diff chain.",15,[[["messageid",3]],[["result",6],["string",3]]]],[0,"document_builder","","",null,null],[3,"IotaDocumentBuilder","identity_iota::did::document_builder","",null,null],[12,"authentication_tag","","",16,null],[12,"authentication_type","","",16,null],[12,"did_network","","",16,null],[12,"did_shard","","",16,null],[12,"immutable","","",16,null],[11,"new","identity_iota::did","",16,[[]]],[11,"authentication_tag","","",16,[[]]],[11,"authentication_type","","",16,[[["methodtype",4]]]],[11,"did_network","","",16,[[]]],[11,"did_shard","","",16,[[]]],[11,"immutable","","",16,[[]]],[11,"build","","",16,[[],["result",6]]],[11,"default_keypair","","",16,[[["methodtype",4]],[["result",6],["keypair",3]]]],[0,"document_diff","","",null,null],[3,"DocumentDiff","identity_iota::did::document_diff","",null,null],[12,"did","","",17,null],[12,"diff","","",17,null],[12,"previous_message_id","","",17,null],[12,"proof","","",17,null],[12,"message_id","","",17,null],[11,"new","identity_iota::did","",17,[[["messageid",3],["iotadocument",3]],["result",6]]],[11,"id","","Returns the DID of associated document.",17,[[],["iotadid",3]]],[11,"diff","","Returns the raw contents of the DID document diff.",17,[[]]],[11,"previous_message_id","","Returns the Tangle message id of the previous DID document…",17,[[],["messageid",3]]],[11,"proof","","Returns a reference to the `DocumentDiff` proof.",17,[[],[["option",4],["signature",3]]]],[11,"publish","","Publishes the `DocumentDiff` to the Tangle using a default…",17,[[["messageid",3]]]],[11,"publish_with_client","","Publishes the `DocumentDiff` to the Tangle using the…",17,[[["messageid",3],["client",3]]]],[11,"merge","","",17,[[["iotadocument",3]],[["result",6],["iotadocument",3]]]],[0,"document_properties","","",null,null],[3,"Properties","identity_iota::did::document_properties","",null,null],[12,"created","","",18,null],[12,"updated","","",18,null],[12,"immutable","","",18,null],[12,"previous_message_id","","",18,null],[12,"properties","","",18,null],[11,"new","identity_iota::did","",18,[[]]],[0,"error","identity_iota","",null,null],[4,"Error","identity_iota::error","",null,null],[13,"CoreError","","",19,null],[13,"DiffError","","",19,null],[13,"InvalidDID","","",19,null],[13,"InvalidDoc","","",19,null],[13,"ClientError","","",19,null],[13,"TernaryError","","",19,null],[13,"InvalidDocument","","",19,null],[12,"error","identity_iota::error::Error","",20,null],[13,"InvalidDIDNetwork","identity_iota::error","",19,null],[13,"InvalidTryteConversion","","",19,null],[13,"InvalidTransactionBundle","","",19,null],[13,"InvalidTransactionHashes","","",19,null],[13,"InvalidTransactionTrytes","","",19,null],[13,"InvalidBundleTail","","",19,null],[13,"ChainError","","",19,null],[12,"error","identity_iota::error::Error","",21,null],[6,"Result","identity_iota::error","",null,null],[0,"tangle","identity_iota","",null,null],[3,"Message","identity_iota::tangle","",null,null],[12,"address","","",22,null],[12,"message","","",22,null],[12,"tail_hash","","",22,null],[12,"timestamp","","",22,null],[3,"MessageId","","",null,null],[12,"0","","",23,null],[3,"MessageIndex","","",null,null],[12,"inner","","",24,null],[0,"message","","",null,null],[3,"Message","identity_iota::tangle::message","",null,null],[12,"address","","",22,null],[12,"message","","",22,null],[12,"tail_hash","","",22,null],[12,"timestamp","","",22,null],[11,"try_from_bundle","identity_iota::tangle","",22,[[["bundledtransaction",3],["vec",3]],["result",6]]],[11,"message_str","","Returns the contents of the message as a tryte-encoded…",22,[[],["string",3]]],[11,"message_utf8","","Returns the contents of the message as a utf8-encoded…",22,[[],[["result",6],["string",3]]]],[11,"message_id","","Returns the `MessageId` identifying the Tangle message.",22,[[],["messageid",3]]],[11,"try_extract_document","","",22,[[["iotadid",3]],[["option",4],["iotadocument",3]]]],[11,"try_extract_diff","","",22,[[["iotadid",3]],[["option",4],["documentdiff",3]]]],[0,"message_id","","",null,null],[3,"MessageId","identity_iota::tangle::message_id","",null,null],[12,"0","","",23,null],[5,"maybe_trytes","","",null,[[]]],[18,"NONE","identity_iota::tangle","",23,null],[11,"new","","",23,[[]]],[11,"is_none","","",23,[[]]],[11,"is_some","","",23,[[]]],[11,"as_str","","",23,[[]]],[0,"message_index","","",null,null],[3,"MessageIndex","identity_iota::tangle::message_index","",null,null],[12,"inner","","",24,null],[6,"__Index","","",null,null],[11,"new","identity_iota::tangle","Creates a new `MessageIndex`.",24,[[]]],[11,"size","","Returns the total size of the index.",24,[[]]],[11,"remove_where","","",24,[[],["option",4]]],[11,"insert","","",24,[[]]],[11,"extend","","",24,[[]]],[0,"traits","","",null,null],[8,"TangleRef","identity_iota::tangle::traits","",null,null],[10,"message_id","","",25,[[],["messageid",3]]],[10,"set_message_id","","",25,[[["messageid",3]]]],[10,"previous_message_id","","",25,[[],["messageid",3]]],[10,"set_previous_message_id","","",25,[[["messageid",3]]]],[8,"TangleRef","identity_iota::tangle","",null,null],[10,"message_id","","",25,[[],["messageid",3]]],[10,"set_message_id","","",25,[[["messageid",3]]]],[10,"previous_message_id","","",25,[[],["messageid",3]]],[10,"set_previous_message_id","","",25,[[["messageid",3]]]],[0,"utils","identity_iota","",null,null],[5,"txn_hash","identity_iota::utils","",null,[[["bundledtransaction",3]],["hash",3]]],[5,"txn_hash_trytes","","",null,[[["bundledtransaction",3]],["string",3]]],[5,"encode_trits","","",null,[[["trits",3]],["string",3]]],[5,"create_address_from_trits","","",null,[[],[["address",3],["result",6]]]],[5,"to_tryte","","",null,[[]]],[5,"utf8_to_trytes","","",null,[[],["string",3]]],[5,"trytes_to_utf8","","",null,[[],[["result",6],["string",3]]]],[5,"bundles_from_trytes","","",null,[[["bundledtransaction",3],["vec",3]],[["vec",3],["vec",3]]]],[5,"cmp_trits","","",null,[[["trits",3]],["ordering",4]]],[5,"cmp_transaction","","",null,[[["bundledtransaction",3]]]],[0,"vc","identity_iota","",null,null],[3,"CredentialValidation","identity_iota::vc","",null,null],[12,"credential","","",26,null],[12,"issuer","","",26,null],[12,"subjects","","",26,null],[12,"verified","","",26,null],[3,"PresentationValidation","","",null,null],[12,"presentation","","",27,null],[12,"holder","","",27,null],[12,"credentials","","",27,null],[12,"verified","","",27,null],[3,"DocumentValidation","","",null,null],[12,"did","","",28,null],[12,"document","","",28,null],[12,"metadata","","",28,null],[12,"verified","","",28,null],[3,"CredentialValidator","","",null,null],[12,"client","","",29,null],[0,"validator","","",null,null],[3,"CredentialValidation","identity_iota::vc::validator","",null,null],[12,"credential","","",26,null],[12,"issuer","","",26,null],[12,"subjects","","",26,null],[12,"verified","","",26,null],[3,"PresentationValidation","","",null,null],[12,"presentation","","",27,null],[12,"holder","","",27,null],[12,"credentials","","",27,null],[12,"verified","","",27,null],[3,"DocumentValidation","","",null,null],[12,"did","","",28,null],[12,"document","","",28,null],[12,"metadata","","",28,null],[12,"verified","","",28,null],[3,"CredentialValidator","","",null,null],[12,"client","","",29,null],[11,"new","identity_iota::vc","Creates a new `CredentialValidator`.",29,[[["client",3]]]],[11,"check","","Deserializes the given JSON-encoded `VerifiableCredential`…",29,[[]]],[11,"check_presentation","","Deserializes the given JSON-encoded…",29,[[]]],[11,"validate_credential","","Validates the `VerifiableCredential` proof and all…",29,[[["verifiablecredential",3]]]],[11,"validate_presentation","","Validates the `VerifiablePresentation` proof and all…",29,[[["verifiablepresentation",3]]]],[11,"validate_document","","",29,[[]]],[0,"crypto","identity_iota","Re-export `identity_core::crypto`; in the future this will…",null,null],[3,"PublicKey","identity_iota::crypto","",null,null],[12,"0","","",30,null],[3,"SecretKey","","",null,null],[12,"0","","",31,null],[3,"KeyPair","","A convenience for storing a pair of public/secret keys",null,null],[12,"0","","",32,null],[12,"1","","",32,null],[11,"from","identity_iota::chain","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","identity_iota::client","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"equivalent","","",6,[[]]],[11,"vzip","","",6,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","identity_iota::client::network","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","identity_iota::did","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"equivalent","","",13,[[]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","identity_iota::error","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"as_fail","","",19,[[],["fail",8]]],[11,"from","identity_iota::tangle","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"equivalent","","",23,[[]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","identity_iota::vc","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","identity_iota::crypto","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"zeroize","","",30,[[]]],[11,"encode_hex","","",30,[[]]],[11,"encode_hex_upper","","",30,[[]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"zeroize","","",31,[[]]],[11,"encode_hex","","",31,[[]]],[11,"encode_hex_upper","","",31,[[]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"zeroize","","",32,[[]]],[11,"vzip","","",32,[[]]],[11,"fmt","","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",30,[[],["publickey",3]]],[11,"clone","","",32,[[],["keypair",3]]],[11,"clone","","",31,[[],["secretkey",3]]],[11,"drop","","",32,[[]]],[11,"drop","","",31,[[]]],[11,"drop","","",30,[[]]],[11,"from","","",30,[[["vec",3]],["publickey",3]]],[11,"from","","",31,[[["vec",3]],["secretkey",3]]],[11,"as_ref","","",31,[[]]],[11,"as_ref","","",30,[[]]],[11,"zeroize","","",30,[[]]],[11,"zeroize","","",32,[[]]],[11,"zeroize","","",31,[[]]],[11,"fmt","","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"message_id","identity_iota::did","",15,[[],["messageid",3]]],[11,"set_message_id","","",15,[[["messageid",3]]]],[11,"previous_message_id","","",15,[[],["messageid",3]]],[11,"set_previous_message_id","","",15,[[["messageid",3]]]],[11,"message_id","","",17,[[],["messageid",3]]],[11,"set_message_id","","",17,[[["messageid",3]]]],[11,"previous_message_id","","",17,[[],["messageid",3]]],[11,"set_previous_message_id","","",17,[[["messageid",3]]]],[11,"as_ref","","",13,[[],["did",3]]],[11,"as_ref","","",13,[[]]],[11,"from","identity_iota::client","",6,[[["network",4]],["network",4]]],[11,"from","identity_iota::did","",15,[[["verifiabledocument",3],["properties",3]]]],[11,"from","identity_iota::error","",19,[[["error",4]]]],[11,"from","","",19,[[["error",4]]]],[11,"from","","",19,[[["error",4]]]],[11,"from","","",19,[[["error",4]]]],[11,"from","","",19,[[["error",4]]]],[11,"from","","",19,[[["error",4]]]],[11,"from","identity_iota::tangle","",23,[[["string",3]]]],[11,"clone","identity_iota::client","",3,[[],["client",3]]],[11,"clone","","",4,[[],["clientbuilder",3]]],[11,"clone","","",6,[[],["network",4]]],[11,"clone","identity_iota::did","",13,[[],["iotadid",3]]],[11,"clone","","",14,[[],["segments",3]]],[11,"clone","","",15,[[],["iotadocument",3]]],[11,"clone","","",16,[[],["iotadocumentbuilder",3]]],[11,"clone","","",17,[[],["documentdiff",3]]],[11,"clone","","",18,[[],["properties",3]]],[11,"clone","identity_iota::tangle","",23,[[],["messageid",3]]],[11,"clone","","",24,[[],["messageindex",3]]],[11,"clone","identity_iota::vc","",26,[[],["credentialvalidation",3]]],[11,"clone","","",27,[[],["presentationvalidation",3]]],[11,"clone","","",28,[[],["documentvalidation",3]]],[11,"clone","","",29,[[],["credentialvalidator",3]]],[11,"default","identity_iota::chain","",1,[[]]],[11,"default","identity_iota::client","",4,[[]]],[11,"default","","",6,[[]]],[11,"default","identity_iota::did","",16,[[]]],[11,"default","","",18,[[]]],[11,"default","identity_iota::tangle","",23,[[]]],[11,"default","","",24,[[]]],[11,"cmp","identity_iota::client","",6,[[["network",4]],["ordering",4]]],[11,"cmp","identity_iota::did","",13,[[["iotadid",3]],["ordering",4]]],[11,"cmp","identity_iota::tangle","",23,[[["messageid",3]],["ordering",4]]],[11,"eq","identity_iota::client","",6,[[["network",4]]]],[11,"eq","identity_iota::did","",13,[[["iotadid",3]]]],[11,"ne","","",13,[[["iotadid",3]]]],[11,"eq","","",13,[[["did",3]]]],[11,"eq","","",14,[[["segments",3]]]],[11,"ne","","",14,[[["segments",3]]]],[11,"eq","","",15,[[["iotadocument",3]]]],[11,"ne","","",15,[[["iotadocument",3]]]],[11,"eq","","",15,[[["verifiabledocument",3]]]],[11,"eq","","",17,[[["documentdiff",3]]]],[11,"ne","","",17,[[["documentdiff",3]]]],[11,"eq","","",18,[[["properties",3]]]],[11,"ne","","",18,[[["properties",3]]]],[11,"eq","identity_iota::tangle","",23,[[["messageid",3]]]],[11,"ne","","",23,[[["messageid",3]]]],[11,"eq","","",23,[[]]],[11,"eq","identity_iota::vc","",26,[[["credentialvalidation",3]]]],[11,"ne","","",26,[[["credentialvalidation",3]]]],[11,"eq","","",27,[[["presentationvalidation",3]]]],[11,"ne","","",27,[[["presentationvalidation",3]]]],[11,"eq","","",28,[[["documentvalidation",3]]]],[11,"ne","","",28,[[["documentvalidation",3]]]],[11,"partial_cmp","identity_iota::client","",6,[[["network",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","identity_iota::did","",13,[[["iotadid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",13,[[["iotadid",3]]]],[11,"le","","",13,[[["iotadid",3]]]],[11,"gt","","",13,[[["iotadid",3]]]],[11,"ge","","",13,[[["iotadid",3]]]],[11,"partial_cmp","identity_iota::tangle","",23,[[["messageid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",23,[[["messageid",3]]]],[11,"le","","",23,[[["messageid",3]]]],[11,"gt","","",23,[[["messageid",3]]]],[11,"ge","","",23,[[["messageid",3]]]],[11,"deref","identity_iota::client::network","",7,[[],["url",3]]],[11,"deref","","",8,[[],["url",3]]],[11,"deref","","",9,[[],["url",3]]],[11,"deref","","",10,[[],["url",3]]],[11,"deref","","",11,[[],["url",3]]],[11,"deref","","",12,[[],["url",3]]],[11,"deref","identity_iota::did","",13,[[]]],[11,"deref","","",15,[[]]],[11,"deref","identity_iota::tangle","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"fmt","identity_iota::chain","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","identity_iota::client","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","identity_iota::did","",13,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","identity_iota::error","",19,[[["formatter",3]],["result",6]]],[11,"fmt","identity_iota::tangle","",22,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","identity_iota::vc","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","identity_iota::client","",5,[[["formatter",3]],["result",6]]],[11,"fmt","identity_iota::did","",13,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",15,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","identity_iota::error","",19,[[["formatter",3]],["result",6]]],[11,"hash","identity_iota::client","",6,[[]]],[11,"hash","identity_iota::did","",13,[[]]],[11,"try_from","","",13,[[["did",3]],["result",6]]],[11,"try_from","","",15,[[["document",3]],["result",6]]],[11,"from_str","","",13,[[],["result",6]]],[11,"from_iter","identity_iota::tangle","",24,[[]]],[11,"source","identity_iota::error","",19,[[],[["option",4],["error",8]]]],[11,"initialize","identity_iota::client::network","",7,[[]]],[11,"initialize","","",8,[[]]],[11,"initialize","","",9,[[]]],[11,"initialize","","",10,[[]]],[11,"initialize","","",11,[[]]],[11,"initialize","","",12,[[]]],[11,"serialize","identity_iota::did","",13,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","","",17,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","identity_iota::tangle","",23,[[],["result",4]]],[11,"serialize","identity_iota::vc","",26,[[],["result",4]]],[11,"serialize","","",27,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"deserialize","identity_iota::did","",13,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","","",17,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","identity_iota::tangle","",23,[[],["result",4]]],[11,"is_supported","identity_iota::client","",3,[[["did",3]]]],[11,"read","","",3,[[["did",3],["inputmetadata",3]],[["box",3],["pin",3]]]],[11,"set_signature","identity_iota::did","",15,[[["signature",3]]]],[11,"set_signature","","",17,[[["signature",3]]]],[11,"signature","","",15,[[],[["option",4],["signature",3]]]],[11,"signature","","",17,[[],[["option",4],["signature",3]]]],[11,"signature_mut","","",15,[[],[["option",4],["signature",3]]]],[11,"signature_mut","","",17,[[],[["option",4],["signature",3]]]],[11,"resolve_method","","",15,[[["methodquery",3]],[["methodwrap",3],["option",4]]]],[11,"len","identity_iota::crypto","",30,[[]]],[11,"is_empty","","",30,[[]]],[11,"to_hex","","",30,[[],["string",3]]],[11,"len","","",31,[[]]],[11,"is_empty","","",31,[[]]],[11,"to_hex","","",31,[[],["string",3]]],[11,"new","","Creates a new `KeyPair` from the given keys.",32,[[["secretkey",3],["publickey",3]],["keypair",3]]],[11,"public","","Returns a reference to the `PublicKey` object.",32,[[],["publickey",3]]],[11,"secret","","Returns a reference to the `SecretKey` object.",32,[[],["secretkey",3]]]],"p":[[3,"AuthChain"],[3,"DiffChain"],[3,"DocumentChain"],[3,"Client"],[3,"ClientBuilder"],[3,"TxnPrinter"],[4,"Network"],[3,"EXPLORER_MAIN"],[3,"EXPLORER_DEV"],[3,"EXPLORER_COM"],[3,"NODE_MAIN"],[3,"NODE_DEV"],[3,"NODE_COM"],[3,"IotaDID"],[3,"Segments"],[3,"IotaDocument"],[3,"IotaDocumentBuilder"],[3,"DocumentDiff"],[3,"Properties"],[4,"Error"],[13,"InvalidDocument"],[13,"ChainError"],[3,"Message"],[3,"MessageId"],[3,"MessageIndex"],[8,"TangleRef"],[3,"CredentialValidation"],[3,"PresentationValidation"],[3,"DocumentValidation"],[3,"CredentialValidator"],[3,"PublicKey"],[3,"SecretKey"],[3,"KeyPair"],[4,"__Full"],[4,"__Mini"],[4,"__Hash"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);